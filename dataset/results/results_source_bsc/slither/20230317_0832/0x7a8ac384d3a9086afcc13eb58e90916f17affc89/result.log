[91m
Reentrancy in ProfitSharingRewardPool._deposit(address,uint256) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#829-838):
	External calls:
	- getAllRewards(_account) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#831)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#598)
		- (success,returndata) = target.call{value: value}(data) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#435)
		- IERC20(_token).safeTransfer(_to,_amount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#924)
	External calls sending eth:
	- getAllRewards(_account) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#831)
		- (success,returndata) = target.call{value: value}(data) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#435)
	State variables written after the call(s):
	- user.amount = user.amount.add(_amount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#832)
	- user.rewardDebt[_wbnb] = user.amount.mul(rewardPoolInfo[_wbnb].accRewardPerShare).div(1e18) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#835)
	- user.rewardDebt[_busd] = user.amount.mul(rewardPoolInfo[_busd].accRewardPerShare).div(1e18) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#836)
Reentrancy in ProfitSharingRewardPool._withdraw(address,uint256) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#851-863):
	External calls:
	- getAllRewards(_account) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#853)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#598)
		- (success,returndata) = target.call{value: value}(data) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#435)
		- IERC20(_token).safeTransfer(_to,_amount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#924)
	External calls sending eth:
	- getAllRewards(_account) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#853)
		- (success,returndata) = target.call{value: value}(data) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#435)
	State variables written after the call(s):
	- user.amount = user.amount.sub(_amount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#855)
Reentrancy in ProfitSharingRewardPool._withdraw(address,uint256) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#851-863):
	External calls:
	- getAllRewards(_account) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#853)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#598)
		- (success,returndata) = target.call{value: value}(data) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#435)
		- IERC20(_token).safeTransfer(_to,_amount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#924)
	- IERC20(stakeToken).safeTransfer(_account,_amount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#856)
	External calls sending eth:
	- getAllRewards(_account) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#853)
		- (success,returndata) = target.call{value: value}(data) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#435)
	State variables written after the call(s):
	- user.rewardDebt[_wbnb] = user.amount.mul(rewardPoolInfo[_wbnb].accRewardPerShare).div(1e18) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#860)
	- user.rewardDebt[_busd] = user.amount.mul(rewardPoolInfo[_busd].accRewardPerShare).div(1e18) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#861)
Reentrancy in ProfitSharingRewardPool.allocateMoreRewards(uint256,uint256,uint256) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#777-791):
	External calls:
	- _allocateMoreRewards(wbnb,_wbnbAmount,_days) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#782)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#598)
		- IERC20(_rewardToken).safeTransferFrom(msg.sender,address(this),_addedReward) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#801)
		- (success,returndata) = target.call{value: value}(data) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#435)
	- _allocateMoreRewards(busd,_busdAmount,_days) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#783)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#598)
		- IERC20(_rewardToken).safeTransferFrom(msg.sender,address(this),_addedReward) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#801)
		- (success,returndata) = target.call{value: value}(data) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#435)
	External calls sending eth:
	- _allocateMoreRewards(wbnb,_wbnbAmount,_days) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#782)
		- (success,returndata) = target.call{value: value}(data) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#435)
	- _allocateMoreRewards(busd,_busdAmount,_days) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#783)
		- (success,returndata) = target.call{value: value}(data) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#435)
	State variables written after the call(s):
	- endRewardBlock = block.number.add(_days.mul(BLOCKS_PER_DAY)) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#786)
	- endRewardBlock = endRewardBlock.add(_days.mul(BLOCKS_PER_DAY)) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#788)
	- _allocateMoreRewards(busd,_busdAmount,_days) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#783)
		- rewardPoolInfo[_rewardToken].rewardPerBlock = _newPendingReward.div(_newPendingBlocks) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#804)
		- rewardPool.accRewardPerShare = rewardPool.accRewardPerShare.add(_incRewardPerShare) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#822)
		- rewardPool.lastRewardBlock = _endRewardBlockApplicable (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#824)
Reentrancy in ProfitSharingRewardPool.getAllRewards(address) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#873-876):
	External calls:
	- getReward(wbnb,_account) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#874)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#598)
		- (success,returndata) = target.call{value: value}(data) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#435)
		- IERC20(_token).safeTransfer(_to,_amount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#924)
	- getReward(busd,_account) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#875)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#598)
		- (success,returndata) = target.call{value: value}(data) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#435)
		- IERC20(_token).safeTransfer(_to,_amount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#924)
	External calls sending eth:
	- getReward(wbnb,_account) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#874)
		- (success,returndata) = target.call{value: value}(data) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#435)
	- getReward(busd,_account) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#875)
		- (success,returndata) = target.call{value: value}(data) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#435)
	State variables written after the call(s):
	- getReward(busd,_account) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#875)
		- rewardPool.totalPaidRewards = rewardPool.totalPaidRewards.add(_pendingReward) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#886)
		- rewardPool.accRewardPerShare = rewardPool.accRewardPerShare.add(_incRewardPerShare) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#822)
		- rewardPool.lastRewardBlock = _endRewardBlockApplicable (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#824)
	- getReward(busd,_account) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#875)
		- user.accumulatedEarned[_rewardToken] = user.accumulatedEarned[_rewardToken].add(_pendingReward) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#885)
		- user.rewardDebt[_rewardToken] = user.amount.mul(_accRewardPerShare).div(1e18) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#887)
		- user.reward[_rewardToken] = _paidAmount (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#892)
		- user.reward[_rewardToken] = 0 (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#894)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities[0m
[93m
Reentrancy in ProfitSharingRewardPool._allocateMoreRewards(address,uint256,uint256) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#793-806):
	External calls:
	- IERC20(_rewardToken).safeTransferFrom(msg.sender,address(this),_addedReward) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#801)
	State variables written after the call(s):
	- rewardPoolInfo[_rewardToken].rewardPerBlock = _newPendingReward.div(_newPendingBlocks) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#804)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
[92m
ProfitSharingRewardPool.initialize(address,address,address,address,uint256) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#698-719) should emit an event for: 
	- reserveFund = _reserveFund (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#710) 
	- operator = msg.sender (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#714) 
	- operator = msg.sender (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#714) 
	- operator = msg.sender (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#714) 
	- operator = msg.sender (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#714) 
ProfitSharingRewardPool.setOperator(address) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#721-723) should emit an event for: 
	- operator = _operator (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#722) 
	- operator = _operator (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#722) 
	- operator = _operator (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#722) 
	- operator = _operator (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#722) 
ProfitSharingRewardPool.setExchangeProxy(address) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#725-727) should emit an event for: 
	- exchangeProxy = _exchangeProxy (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#726) 
ProfitSharingRewardPool.setReserveFund(address) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#729-731) should emit an event for: 
	- reserveFund = _reserveFund (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#730) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control[0m
[92m
ProfitSharingRewardPool.initialize(address,address,address,address,uint256) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#698-719) should emit an event for: 
	- startRewardBlock = _startRewardBlock (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#711) 
	- endRewardBlock = _startRewardBlock (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#712) 
ProfitSharingRewardPool.allocateMoreRewards(uint256,uint256,uint256) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#777-791) should emit an event for: 
	- endRewardBlock = block.number.add(_days.mul(BLOCKS_PER_DAY)) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#786) 
	- endRewardBlock = endRewardBlock.add(_days.mul(BLOCKS_PER_DAY)) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#788) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic[0m
[92m
ProfitSharingRewardPool.initialize(address,address,address,address,uint256)._stakeToken (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#699) lacks a zero-check on :
		- stakeToken = _stakeToken (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#707)
ProfitSharingRewardPool.initialize(address,address,address,address,uint256)._wbnb (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#700) lacks a zero-check on :
		- wbnb = _wbnb (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#708)
ProfitSharingRewardPool.initialize(address,address,address,address,uint256)._busd (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#701) lacks a zero-check on :
		- busd = _busd (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#709)
ProfitSharingRewardPool.initialize(address,address,address,address,uint256)._reserveFund (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#702) lacks a zero-check on :
		- reserveFund = _reserveFund (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#710)
ProfitSharingRewardPool.setOperator(address)._operator (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#721) lacks a zero-check on :
		- operator = _operator (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#722)
ProfitSharingRewardPool.setExchangeProxy(address)._exchangeProxy (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#725) lacks a zero-check on :
		- exchangeProxy = _exchangeProxy (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#726)
ProfitSharingRewardPool.setReserveFund(address)._reserveFund (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#729) lacks a zero-check on :
		- reserveFund = _reserveFund (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#730)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation[0m
[92m
Reentrancy in ProfitSharingRewardPool._deposit(address,uint256) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#829-838):
	External calls:
	- getAllRewards(_account) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#831)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#598)
		- (success,returndata) = target.call{value: value}(data) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#435)
		- IERC20(_token).safeTransfer(_to,_amount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#924)
	External calls sending eth:
	- getAllRewards(_account) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#831)
		- (success,returndata) = target.call{value: value}(data) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#435)
	Event emitted after the call(s):
	- Deposit(_account,_amount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#837)
Reentrancy in ProfitSharingRewardPool._withdraw(address,uint256) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#851-863):
	External calls:
	- getAllRewards(_account) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#853)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#598)
		- (success,returndata) = target.call{value: value}(data) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#435)
		- IERC20(_token).safeTransfer(_to,_amount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#924)
	- IERC20(stakeToken).safeTransfer(_account,_amount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#856)
	External calls sending eth:
	- getAllRewards(_account) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#853)
		- (success,returndata) = target.call{value: value}(data) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#435)
	Event emitted after the call(s):
	- Withdraw(_account,_amount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#862)
Reentrancy in ProfitSharingRewardPool.deposit(uint256) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#840-843):
	External calls:
	- IERC20(stakeToken).safeTransferFrom(msg.sender,address(this),_amount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#841)
	- _deposit(msg.sender,_amount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#842)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#598)
		- (success,returndata) = target.call{value: value}(data) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#435)
		- IERC20(_token).safeTransfer(_to,_amount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#924)
	External calls sending eth:
	- _deposit(msg.sender,_amount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#842)
		- (success,returndata) = target.call{value: value}(data) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#435)
	Event emitted after the call(s):
	- Deposit(_account,_amount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#837)
		- _deposit(msg.sender,_amount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#842)
	- RewardPaid(_rewardToken,_account,_paidAmount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#896)
		- _deposit(msg.sender,_amount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#842)
Reentrancy in ProfitSharingRewardPool.depositFor(address,uint256) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#845-848):
	External calls:
	- IERC20(stakeToken).safeTransferFrom(msg.sender,address(this),_amount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#846)
	- _deposit(_account,_amount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#847)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#598)
		- (success,returndata) = target.call{value: value}(data) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#435)
		- IERC20(_token).safeTransfer(_to,_amount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#924)
	External calls sending eth:
	- _deposit(_account,_amount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#847)
		- (success,returndata) = target.call{value: value}(data) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#435)
	Event emitted after the call(s):
	- Deposit(_account,_amount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#837)
		- _deposit(_account,_amount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#847)
	- RewardPaid(_rewardToken,_account,_paidAmount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#896)
		- _deposit(_account,_amount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#847)
Reentrancy in ProfitSharingRewardPool.emergencyWithdraw() (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#902-912):
	External calls:
	- IERC20(stakeToken).safeTransfer(msg.sender,_amount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#910)
	Event emitted after the call(s):
	- EmergencyWithdraw(msg.sender,_amount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#911)
Reentrancy in ProfitSharingRewardPool.getAllRewards(address) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#873-876):
	External calls:
	- getReward(wbnb,_account) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#874)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#598)
		- (success,returndata) = target.call{value: value}(data) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#435)
		- IERC20(_token).safeTransfer(_to,_amount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#924)
	- getReward(busd,_account) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#875)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#598)
		- (success,returndata) = target.call{value: value}(data) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#435)
		- IERC20(_token).safeTransfer(_to,_amount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#924)
	External calls sending eth:
	- getReward(wbnb,_account) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#874)
		- (success,returndata) = target.call{value: value}(data) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#435)
	- getReward(busd,_account) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#875)
		- (success,returndata) = target.call{value: value}(data) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#435)
	Event emitted after the call(s):
	- RewardPaid(_rewardToken,_account,_paidAmount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#896)
		- getReward(busd,_account) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#875)
Reentrancy in ProfitSharingRewardPool.getReward(address,address) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#878-899):
	External calls:
	- _safeTokenTransfer(_rewardToken,_account,_paidAmount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#895)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#598)
		- (success,returndata) = target.call{value: value}(data) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#435)
		- IERC20(_token).safeTransfer(_to,_amount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#924)
	External calls sending eth:
	- _safeTokenTransfer(_rewardToken,_account,_paidAmount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#895)
		- (success,returndata) = target.call{value: value}(data) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#435)
	Event emitted after the call(s):
	- RewardPaid(_rewardToken,_account,_paidAmount) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#896)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
[92m
Address.isContract(address) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#327-338) uses assembly
	- INLINE ASM (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#334-336)
Address._verifyCallResult(bool,bytes,string) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#495-516) uses assembly
	- INLINE ASM (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#508-511)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
[92m
Address.functionCall(address,bytes) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#382-384) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#411-417) is never used and should be removed
Address.functionDelegateCall(address,bytes) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#473-475) is never used and should be removed
Address.functionDelegateCall(address,bytes,string) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#483-493) is never used and should be removed
Address.functionStaticCall(address,bytes) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#445-447) is never used and should be removed
Address.functionStaticCall(address,bytes,string) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#455-465) is never used and should be removed
Address.sendValue(address,uint256) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#356-362) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#556-567) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#578-585) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#569-576) is never used and should be removed
SafeMath.div(uint256,uint256,string) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#272-279) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#230-233) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#296-303) is never used and should be removed
SafeMath.sub(uint256,uint256,string) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#248-255) is never used and should be removed
SafeMath.tryAdd(uint256,uint256) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#102-106) is never used and should be removed
SafeMath.tryDiv(uint256,uint256) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#138-141) is never used and should be removed
SafeMath.tryMod(uint256,uint256) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#148-151) is never used and should be removed
SafeMath.tryMul(uint256,uint256) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#123-131) is never used and should be removed
SafeMath.trySub(uint256,uint256) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#113-116) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code[0m
[92m
Low level call in Address.sendValue(address,uint256) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#356-362):
	- (success) = recipient.call{value: amount}() (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#360)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#425-437):
	- (success,returndata) = target.call{value: value}(data) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#435)
Low level call in Address.functionStaticCall(address,bytes,string) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#455-465):
	- (success,returndata) = target.staticcall(data) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#463)
Low level call in Address.functionDelegateCall(address,bytes,string) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#483-493):
	- (success,returndata) = target.delegatecall(data) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#491)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
[92m
Parameter ProfitSharingRewardPool.initialize(address,address,address,address,uint256)._stakeToken (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#699) is not in mixedCase
Parameter ProfitSharingRewardPool.initialize(address,address,address,address,uint256)._wbnb (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#700) is not in mixedCase
Parameter ProfitSharingRewardPool.initialize(address,address,address,address,uint256)._busd (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#701) is not in mixedCase
Parameter ProfitSharingRewardPool.initialize(address,address,address,address,uint256)._reserveFund (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#702) is not in mixedCase
Parameter ProfitSharingRewardPool.initialize(address,address,address,address,uint256)._startRewardBlock (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#703) is not in mixedCase
Parameter ProfitSharingRewardPool.setOperator(address)._operator (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#721) is not in mixedCase
Parameter ProfitSharingRewardPool.setExchangeProxy(address)._exchangeProxy (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#725) is not in mixedCase
Parameter ProfitSharingRewardPool.setReserveFund(address)._reserveFund (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#729) is not in mixedCase
Parameter ProfitSharingRewardPool.getRewardPerBlock(address,uint256,uint256)._rewardToken (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#736) is not in mixedCase
Parameter ProfitSharingRewardPool.getRewardPerBlock(address,uint256,uint256)._from (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#737) is not in mixedCase
Parameter ProfitSharingRewardPool.getRewardPerBlock(address,uint256,uint256)._to (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#738) is not in mixedCase
Parameter ProfitSharingRewardPool.getRewardPerBlock(address)._rewardToken (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#751) is not in mixedCase
Parameter ProfitSharingRewardPool.pendingReward(address,address)._rewardToken (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#755) is not in mixedCase
Parameter ProfitSharingRewardPool.pendingReward(address,address)._account (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#755) is not in mixedCase
Parameter ProfitSharingRewardPool.setRewardPool(address,uint256)._rewardToken (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#772) is not in mixedCase
Parameter ProfitSharingRewardPool.setRewardPool(address,uint256)._startBlock (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#772) is not in mixedCase
Parameter ProfitSharingRewardPool.allocateMoreRewards(uint256,uint256,uint256)._wbnbAmount (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#778) is not in mixedCase
Parameter ProfitSharingRewardPool.allocateMoreRewards(uint256,uint256,uint256)._busdAmount (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#779) is not in mixedCase
Parameter ProfitSharingRewardPool.allocateMoreRewards(uint256,uint256,uint256)._days (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#780) is not in mixedCase
Parameter ProfitSharingRewardPool.updateReward(address)._rewardToken (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#813) is not in mixedCase
Parameter ProfitSharingRewardPool.deposit(uint256)._amount (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#840) is not in mixedCase
Parameter ProfitSharingRewardPool.depositFor(address,uint256)._account (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#845) is not in mixedCase
Parameter ProfitSharingRewardPool.depositFor(address,uint256)._amount (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#845) is not in mixedCase
Parameter ProfitSharingRewardPool.withdraw(uint256)._amount (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#865) is not in mixedCase
Parameter ProfitSharingRewardPool.getAllRewards(address)._account (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#873) is not in mixedCase
Parameter ProfitSharingRewardPool.getReward(address,address)._rewardToken (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#878) is not in mixedCase
Parameter ProfitSharingRewardPool.getReward(address,address)._account (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#878) is not in mixedCase
Parameter ProfitSharingRewardPool.governanceRecoverUnsupported(IERC20,uint256,address)._token (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#931) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
[92m
ProfitSharingRewardPool.initialized (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#618) should be constant
ProfitSharingRewardPool.publicAllowed (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#619) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
[92m
initialize(address,address,address,address,uint256) should be declared external:
	- ProfitSharingRewardPool.initialize(address,address,address,address,uint256) (../../sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol#698-719)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
/sb/0x7a8ac384d3a9086afcc13eb58e90916f17affc89.sol analyzed (5 contracts with 78 detectors), 82 result(s) found
