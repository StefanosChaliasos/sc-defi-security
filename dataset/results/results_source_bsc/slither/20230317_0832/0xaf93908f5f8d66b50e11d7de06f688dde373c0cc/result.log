[92m
MedamonERC20.transfer(address,uint256) (../../sb/0xaf93908f5f8d66b50e11d7de06f688dde373c0cc.sol#559-577) compares to a boolean constant:
	-require(bool,string)(blacklist[recipient] == false,Error: recipient is in the blacklist) (../../sb/0xaf93908f5f8d66b50e11d7de06f688dde373c0cc.sol#562)
MedamonERC20.transfer(address,uint256) (../../sb/0xaf93908f5f8d66b50e11d7de06f688dde373c0cc.sol#559-577) compares to a boolean constant:
	-require(bool,string)(blacklist[sender] == false,Error: sender is in the blacklist) (../../sb/0xaf93908f5f8d66b50e11d7de06f688dde373c0cc.sol#561)
MedamonERC20.transferFrom(address,address,uint256) (../../sb/0xaf93908f5f8d66b50e11d7de06f688dde373c0cc.sol#579-606) compares to a boolean constant:
	-require(bool,string)(blacklist[recipient] == false,Error: recipient is in the blacklist) (../../sb/0xaf93908f5f8d66b50e11d7de06f688dde373c0cc.sol#582)
MedamonERC20.transferFrom(address,address,uint256) (../../sb/0xaf93908f5f8d66b50e11d7de06f688dde373c0cc.sol#579-606) compares to a boolean constant:
	-require(bool,string)(blacklist[_msgSender()] == false,Error: operator is in the blacklist) (../../sb/0xaf93908f5f8d66b50e11d7de06f688dde373c0cc.sol#581)
MedamonERC20.transferFrom(address,address,uint256) (../../sb/0xaf93908f5f8d66b50e11d7de06f688dde373c0cc.sol#579-606) compares to a boolean constant:
	-require(bool,string)(blacklist[sender] == false,Error: sender is in the blacklist) (../../sb/0xaf93908f5f8d66b50e11d7de06f688dde373c0cc.sol#580)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality[0m
[92m
Context._msgData() (../../sb/0xaf93908f5f8d66b50e11d7de06f688dde373c0cc.sol#101-103) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code[0m
[92m
solc-0.8.19 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
[92m
Parameter MedamonERC20.setWalletOne(address)._account (../../sb/0xaf93908f5f8d66b50e11d7de06f688dde373c0cc.sol#545) is not in mixedCase
Parameter MedamonERC20.setWalletTwo(address)._account (../../sb/0xaf93908f5f8d66b50e11d7de06f688dde373c0cc.sol#550) is not in mixedCase
Parameter MedamonERC20.toggleBlacklist(address)._account (../../sb/0xaf93908f5f8d66b50e11d7de06f688dde373c0cc.sol#555) is not in mixedCase
Variable MedamonERC20.wallet_one (../../sb/0xaf93908f5f8d66b50e11d7de06f688dde373c0cc.sol#528) is not in mixedCase
Variable MedamonERC20.wallet_two (../../sb/0xaf93908f5f8d66b50e11d7de06f688dde373c0cc.sol#529) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
[92m
MedamonERC20.constructor(address,address,address) (../../sb/0xaf93908f5f8d66b50e11d7de06f688dde373c0cc.sol#533-543) uses literals with too many digits:
	- _tokenSupply = 80000000 * 10 ** 18 (../../sb/0xaf93908f5f8d66b50e11d7de06f688dde373c0cc.sol#541)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits[0m
[92m
renounceOwnership() should be declared external:
	- Ownable.renounceOwnership() (../../sb/0xaf93908f5f8d66b50e11d7de06f688dde373c0cc.sol#140-142)
transferOwnership(address) should be declared external:
	- Ownable.transferOwnership(address) (../../sb/0xaf93908f5f8d66b50e11d7de06f688dde373c0cc.sol#148-151)
name() should be declared external:
	- ERC20.name() (../../sb/0xaf93908f5f8d66b50e11d7de06f688dde373c0cc.sol#191-193)
symbol() should be declared external:
	- ERC20.symbol() (../../sb/0xaf93908f5f8d66b50e11d7de06f688dde373c0cc.sol#199-201)
decimals() should be declared external:
	- ERC20.decimals() (../../sb/0xaf93908f5f8d66b50e11d7de06f688dde373c0cc.sol#216-218)
totalSupply() should be declared external:
	- ERC20.totalSupply() (../../sb/0xaf93908f5f8d66b50e11d7de06f688dde373c0cc.sol#223-225)
balanceOf(address) should be declared external:
	- ERC20.balanceOf(address) (../../sb/0xaf93908f5f8d66b50e11d7de06f688dde373c0cc.sol#230-232)
transfer(address,uint256) should be declared external:
	- ERC20.transfer(address,uint256) (../../sb/0xaf93908f5f8d66b50e11d7de06f688dde373c0cc.sol#242-245)
	- MedamonERC20.transfer(address,uint256) (../../sb/0xaf93908f5f8d66b50e11d7de06f688dde373c0cc.sol#559-577)
approve(address,uint256) should be declared external:
	- ERC20.approve(address,uint256) (../../sb/0xaf93908f5f8d66b50e11d7de06f688dde373c0cc.sol#264-267)
transferFrom(address,address,uint256) should be declared external:
	- ERC20.transferFrom(address,address,uint256) (../../sb/0xaf93908f5f8d66b50e11d7de06f688dde373c0cc.sol#285-301)
	- MedamonERC20.transferFrom(address,address,uint256) (../../sb/0xaf93908f5f8d66b50e11d7de06f688dde373c0cc.sol#579-606)
increaseAllowance(address,uint256) should be declared external:
	- ERC20.increaseAllowance(address,uint256) (../../sb/0xaf93908f5f8d66b50e11d7de06f688dde373c0cc.sol#315-318)
decreaseAllowance(address,uint256) should be declared external:
	- ERC20.decreaseAllowance(address,uint256) (../../sb/0xaf93908f5f8d66b50e11d7de06f688dde373c0cc.sol#334-342)
burn(uint256) should be declared external:
	- ERC20Burnable.burn(uint256) (../../sb/0xaf93908f5f8d66b50e11d7de06f688dde373c0cc.sol#501-503)
burnFrom(address,uint256) should be declared external:
	- ERC20Burnable.burnFrom(address,uint256) (../../sb/0xaf93908f5f8d66b50e11d7de06f688dde373c0cc.sol#516-523)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
/sb/0xaf93908f5f8d66b50e11d7de06f688dde373c0cc.sol analyzed (7 contracts with 78 detectors), 27 result(s) found
