[93m
MPriceCalculatorBSC._oracleValueOf(address,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#986-996) performs a multiplication on the result of a division:
	-valueInUSD = uint256(price).mul(1e10).mul(amount).div(1e18) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#993)
	-valueInBNB = valueInUSD.mul(1e18).div(priceOfBNB()) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#994)
MPriceCalculatorBSC._oracleValueOf(address,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#986-996) performs a multiplication on the result of a division:
	-valueInBNB = uint256(price).mul(1e10).mul(amount).div(1e18) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#990)
	-valueInUSD = valueInBNB.mul(1e18).div(priceOfUSDT()) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#991)
MPriceCalculatorBSC._getPairPrice(address,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#998-1011) performs a multiplication on the result of a division:
	-fairPriceInBNB = sqrtK.mul(2).mul(HomoraMath.sqrt(px0)).div(2 ** 56).mul(HomoraMath.sqrt(px1)).div(2 ** 56) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1007)
MPriceCalculatorBSC._getPairPrice(address,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#998-1011) performs a multiplication on the result of a division:
	-fairPriceInBNB = sqrtK.mul(2).mul(HomoraMath.sqrt(px0)).div(2 ** 56).mul(HomoraMath.sqrt(px1)).div(2 ** 56) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1007)
	-valueInBNB = fairPriceInBNB.mul(amount).div(1e18) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1009)
MPriceCalculatorBSC._getPairPrice(address,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#998-1011) performs a multiplication on the result of a division:
	-valueInBNB = fairPriceInBNB.mul(amount).div(1e18) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1009)
	-valueInUSD = valueInBNB.mul(priceOfBNB()).div(1e18) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1010)
MPriceCalculatorBSC._unsafeValueOfAsset(address,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1013-1054) performs a multiplication on the result of a division:
	-valueInBNB = amount.mul(reserve0).mul(2).div(IPancakePair(asset).totalSupply()) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1023)
	-valueInUSD = valueInBNB.mul(priceOfBNB()).div(1e18) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1027)
MPriceCalculatorBSC._unsafeValueOfAsset(address,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1013-1054) performs a multiplication on the result of a division:
	-valueInBNB = amount.mul(reserve0).mul(2).div(IPancakePair(asset).totalSupply()) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1023)
	-valueInUSD = valueInBNB.mul(priceOfBNB()).div(1e18) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1024)
MPriceCalculatorBSC._unsafeValueOfAsset(address,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1013-1054) performs a multiplication on the result of a division:
	-valueInUSD = valueInBNB.mul(priceOfBNB()).div(1e18) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1031)
	-valueInBNB = reserve0_scope_0.mul(amount).div(reserve1_scope_1) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1041)
MPriceCalculatorBSC._unsafeValueOfAsset(address,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1013-1054) performs a multiplication on the result of a division:
	-valueInBNB = reserve1_scope_1.mul(amount).div(reserve0_scope_0) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1043)
	-valueInUSD = valueInBNB.mul(priceOfBNB()).div(1e18) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1052)
MPriceCalculatorBSC._unsafeValueOfAsset(address,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1013-1054) performs a multiplication on the result of a division:
	-valueInBNB = reserve1_scope_1.mul(amount).div(reserve0_scope_0) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1043)
	-valueInBNB = valueInBNB.mul(pairValueInBNB).div(1e18) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1050)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply[0m
[93m
MPriceCalculatorBSC._unsafeValueOfAsset(address,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1013-1054) uses a dangerous strict equality:
	- IBEP20(asset).balanceOf(pair) == 0 (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1037)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities[0m
[93m
MPriceCalculatorBSC._unsafeValueOfAsset(address,uint256).reserve1_scope_1 (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1039) is a local variable never initialized
MPriceCalculatorBSC._unsafeValueOfAsset(address,uint256).reserve0_scope_0 (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1039) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables[0m
[92m
MPriceCalculatorBSC._oracleValueOf(address,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#986-996) has external calls inside a loop: (price) = AggregatorV3Interface(tokenFeeds[asset]).latestRoundData() (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#987)
MPriceCalculatorBSC._oracleValueOf(address,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#986-996) has external calls inside a loop: keccak256(bytes)(abi.encodePacked(IBEP20(asset).symbol())) == keccak256(bytes)(BAND) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#989)
MPriceCalculatorBSC.priceOfUSDT() (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#950-953) has external calls inside a loop: (price) = AggregatorV3Interface(tokenFeeds[USDT]).latestRoundData() (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#951)
MPriceCalculatorBSC.priceOfBNB() (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#935-938) has external calls inside a loop: (price) = AggregatorV3Interface(tokenFeeds[WBNB]).latestRoundData() (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#936)
MPriceCalculatorBSC._unsafeValueOfAsset(address,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1013-1054) has external calls inside a loop: keccak256(bytes)(abi.encodePacked(IPancakePair(asset).symbol())) == keccak256(bytes)(Cake-LP) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1018)
MPriceCalculatorBSC._unsafeValueOfAsset(address,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1013-1054) has external calls inside a loop: IPancakePair(asset).totalSupply() == 0 (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1019)
MPriceCalculatorBSC._unsafeValueOfAsset(address,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1013-1054) has external calls inside a loop: (reserve0,reserve1) = IPancakePair(asset).getReserves() (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1021)
MPriceCalculatorBSC._unsafeValueOfAsset(address,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1013-1054) has external calls inside a loop: IPancakePair(asset).token0() == WBNB (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1022)
MPriceCalculatorBSC._unsafeValueOfAsset(address,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1013-1054) has external calls inside a loop: valueInBNB = amount.mul(reserve0).mul(2).div(IPancakePair(asset).totalSupply()) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1023)
MPriceCalculatorBSC._unsafeValueOfAsset(address,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1013-1054) has external calls inside a loop: IPancakePair(asset).token1() == WBNB (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1025)
MPriceCalculatorBSC._unsafeValueOfAsset(address,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1013-1054) has external calls inside a loop: valueInBNB = amount.mul(reserve1).mul(2).div(IPancakePair(asset).totalSupply()) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1026)
MPriceCalculatorBSC._unsafeValueOfAsset(address,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1013-1054) has external calls inside a loop: (token0PriceInBNB) = valueOfAsset(IPancakePair(asset).token0(),1e18) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1029)
MPriceCalculatorBSC.valueOfAsset(address,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#974-984) has external calls inside a loop: keccak256(bytes)(abi.encodePacked(IPancakePair(asset).symbol())) == keccak256(bytes)(Cake-LP) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#979)
MPriceCalculatorBSC._getPairPrice(address,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#998-1011) has external calls inside a loop: token0 = IPancakePair(pair).token0() (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#999)
MPriceCalculatorBSC._getPairPrice(address,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#998-1011) has external calls inside a loop: token1 = IPancakePair(pair).token1() (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1000)
MPriceCalculatorBSC._getPairPrice(address,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#998-1011) has external calls inside a loop: totalSupply = IPancakePair(pair).totalSupply() (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1001)
MPriceCalculatorBSC._getPairPrice(address,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#998-1011) has external calls inside a loop: (r0,r1) = IPancakePair(pair).getReserves() (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1002)
MPriceCalculatorBSC._unsafeValueOfAsset(address,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1013-1054) has external calls inside a loop: pair = factory.getPair(asset,pairToken) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1036)
MPriceCalculatorBSC._unsafeValueOfAsset(address,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1013-1054) has external calls inside a loop: valueInBNB = amount.mul(reserve0).mul(2).mul(token0PriceInBNB).div(1e18).div(IPancakePair(asset).totalSupply()) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1030)
MPriceCalculatorBSC._unsafeValueOfAsset(address,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1013-1054) has external calls inside a loop: IBEP20(asset).balanceOf(pair) == 0 (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1037)
MPriceCalculatorBSC._unsafeValueOfAsset(address,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1013-1054) has external calls inside a loop: (reserve0,reserve1) = IPancakePair(pair).getReserves() (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1039)
MPriceCalculatorBSC._unsafeValueOfAsset(address,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1013-1054) has external calls inside a loop: IPancakePair(pair).token0() == pairToken (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1040)
MPriceCalculatorBSC._unsafeValueOfAsset(address,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1013-1054) has external calls inside a loop: IPancakePair(pair).token1() == pairToken (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1042)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop[0m
[92m
Variable 'MPriceCalculatorBSC._unsafeValueOfAsset(address,uint256).reserve1 (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1021)' in MPriceCalculatorBSC._unsafeValueOfAsset(address,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1013-1054) potentially used before declaration: (reserve0,reserve1) = IPancakePair(pair).getReserves() (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1039)
Variable 'MPriceCalculatorBSC._unsafeValueOfAsset(address,uint256).reserve0 (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1021)' in MPriceCalculatorBSC._unsafeValueOfAsset(address,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1013-1054) potentially used before declaration: (reserve0,reserve1) = IPancakePair(pair).getReserves() (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#1039)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables[0m
[92m
AddressUpgradeable.isContract(address) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#505-514) uses assembly
	- INLINE ASM (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#512)
AddressUpgradeable._verifyCallResult(bool,bytes,string) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#626-643) uses assembly
	- INLINE ASM (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#635-638)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
[92m
AddressUpgradeable._verifyCallResult(bool,bytes,string) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#626-643) is never used and should be removed
AddressUpgradeable.functionCall(address,bytes) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#558-560) is never used and should be removed
AddressUpgradeable.functionCall(address,bytes,string) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#568-570) is never used and should be removed
AddressUpgradeable.functionCallWithValue(address,bytes,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#583-585) is never used and should be removed
AddressUpgradeable.functionCallWithValue(address,bytes,uint256,string) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#593-600) is never used and should be removed
AddressUpgradeable.functionStaticCall(address,bytes) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#608-610) is never used and should be removed
AddressUpgradeable.functionStaticCall(address,bytes,string) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#618-624) is never used and should be removed
AddressUpgradeable.sendValue(address,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#532-538) is never used and should be removed
ContextUpgradeable.__Context_init() (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#708-710) is never used and should be removed
ContextUpgradeable._msgData() (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#718-721) is never used and should be removed
HomoraMath.divCeil(uint256,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#201-203) is never used and should be removed
HomoraMath.fmul(uint256,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#205-207) is never used and should be removed
SafeMath.add(uint256,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#29-34) is never used and should be removed
SafeMath.min(uint256,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#172-174) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#147-149) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#163-170) is never used and should be removed
SafeMath.sqrt(uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#177-188) is never used and should be removed
SafeMath.sub(uint256,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#46-48) is never used and should be removed
SafeMath.sub(uint256,uint256,string) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#60-69) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code[0m
[92m
Low level call in AddressUpgradeable.sendValue(address,uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#532-538):
	- (success) = recipient.call{value: amount}() (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#536)
Low level call in AddressUpgradeable.functionCallWithValue(address,bytes,uint256,string) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#593-600):
	- (success,returndata) = target.call{value: value}(data) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#598)
Low level call in AddressUpgradeable.functionStaticCall(address,bytes,string) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#618-624):
	- (success,returndata) = target.staticcall(data) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#622)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
[92m
Function IPancakePair.DOMAIN_SEPARATOR() (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#329) is not in mixedCase
Function IPancakePair.PERMIT_TYPEHASH() (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#330) is not in mixedCase
Function IPancakePair.MINIMUM_LIQUIDITY() (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#347) is not in mixedCase
Function ContextUpgradeable.__Context_init() (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#708-710) is not in mixedCase
Function ContextUpgradeable.__Context_init_unchained() (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#712-713) is not in mixedCase
Variable ContextUpgradeable.__gap (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#722) is not in mixedCase
Function OwnableUpgradeable.__Ownable_init() (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#746-749) is not in mixedCase
Function OwnableUpgradeable.__Ownable_init_unchained() (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#751-755) is not in mixedCase
Variable OwnableUpgradeable.__gap (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#793) is not in mixedCase
Variable MPriceCalculatorBSC.WBNB (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#864) is not in mixedCase
Variable MPriceCalculatorBSC.CAKE (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#865) is not in mixedCase
Variable MPriceCalculatorBSC.MERL (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#866) is not in mixedCase
Variable MPriceCalculatorBSC.VAI (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#867) is not in mixedCase
Variable MPriceCalculatorBSC.BUSD (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#868) is not in mixedCase
Variable MPriceCalculatorBSC.BTC (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#869) is not in mixedCase
Variable MPriceCalculatorBSC.ETH (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#870) is not in mixedCase
Variable MPriceCalculatorBSC.USDT (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#871) is not in mixedCase
Variable MPriceCalculatorBSC.MERL_BNB (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#872) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
[92m
Redundant expression "this (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#719)" inContextUpgradeable (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#707-723)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements[0m
[92m
HomoraMath.sqrt(uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#215-258) uses literals with too many digits:
	- xx >= 0x100000000000000000000000000000000 (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#220)
HomoraMath.sqrt(uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#215-258) uses literals with too many digits:
	- xx >= 0x10000000000000000 (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#225)
HomoraMath.sqrt(uint256) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#215-258) uses literals with too many digits:
	- xx >= 0x100000000 (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#229)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits[0m
[92m
OwnableUpgradeable.__gap (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#793) is never used in MPriceCalculatorBSC (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#845-1055)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable[0m
[92m
renounceOwnership() should be declared external:
	- OwnableUpgradeable.renounceOwnership() (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#779-782)
transferOwnership(address) should be declared external:
	- OwnableUpgradeable.transferOwnership(address) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#788-792)
setTokenFeed(address,address) should be declared external:
	- MPriceCalculatorBSC.setTokenFeed(address,address) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#929-931)
priceOfCake() should be declared external:
	- MPriceCalculatorBSC.priceOfCake() (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#940-943)
priceOfMerlin() should be declared external:
	- MPriceCalculatorBSC.priceOfMerlin() (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#945-948)
priceOfBTC() should be declared external:
	- MPriceCalculatorBSC.priceOfBTC() (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#955-958)
priceOfETH() should be declared external:
	- MPriceCalculatorBSC.priceOfETH() (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#960-963)
pricesInUSD(address[]) should be declared external:
	- MPriceCalculatorBSC.pricesInUSD(address[]) (../../sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol#965-972)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
/sb/0xc45433188d25493893c6f8eb1f573190f77c1f94.sol analyzed (12 contracts with 78 detectors), 93 result(s) found
