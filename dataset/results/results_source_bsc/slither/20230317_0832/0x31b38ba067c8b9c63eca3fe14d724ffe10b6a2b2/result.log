[91m
BvaultsBank.migrateStrategy(uint256,address) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#868-878) ignores return value by pool.want.transfer(_newStrategy,_oldWantAmt) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#875)
BvaultsBank.safeRewardTransfer(address,address,uint256) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1103-1114) ignores return value by IERC20(_rewardToken).transfer(_to,_bal) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1110)
BvaultsBank.safeRewardTransfer(address,address,uint256) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1103-1114) ignores return value by IERC20(_rewardToken).transfer(_to,_amount) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1112)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer[0m
[93m
BvaultsBank.pendingReward(uint256,uint256,address) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#921-937) performs a multiplication on the result of a division:
	-_reward = _multiplier.mul(_rewardPerBlock).mul(pool.allocPoint).div(totalAllocPoint) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#933)
	-_accRewardPerShare = _accRewardPerShare.add(_reward.mul(1e18).div(sharesTotal)) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#934)
BvaultsBank.updatePool(uint256) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#961-982) performs a multiplication on the result of a division:
	-_reward = multiplier.mul(_rewardPerBlock).mul(pool.allocPoint).div(totalAllocPoint) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#978)
	-pool.accRewardPerShare[_rewardPid] = pool.accRewardPerShare[_rewardPid].add(_reward.mul(1e18).div(sharesTotal)) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#979)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply[0m
[93m
BvaultsBank.resetStrategy(uint256,address) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#862-866) uses a dangerous strict equality:
	- require(bool,string)(IERC20(pool.want).balanceOf(poolInfo[_pid].strategy) == 0 || pool.accRewardPerShare[_pid] == 0,strategy not empty) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#864)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities[0m
[93m
Reentrancy in BvaultsBank._getReward(uint256) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#984-1000):
	External calls:
	- safeRewardTransfer(_rewardToken,msg.sender,_pending) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#994)
		- IERC20(_rewardToken).transfer(_to,_bal) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1110)
		- IERC20(_rewardToken).transfer(_to,_amount) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1112)
	State variables written after the call(s):
	- rewardPool.totalPaidRewards = rewardPool.totalPaidRewards.add(_pending) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#995)
Reentrancy in BvaultsBank.deposit(uint256,uint256) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1003-1025):
	External calls:
	- _getReward(_pid) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1010)
		- IERC20(_rewardToken).transfer(_to,_bal) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1110)
		- IERC20(_rewardToken).transfer(_to,_amount) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1112)
	- pool.want.safeTransferFrom(address(msg.sender),address(this),_wantAmt) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1013)
	- pool.want.safeIncreaseAllowance(pool.strategy,_wantAmt) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1015)
	- sharesAdded = IStrategy(poolInfo[_pid].strategy).deposit(msg.sender,_wantAmt) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1016)
	State variables written after the call(s):
	- user.shares = user.shares.add(sharesAdded) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1017)
	- user.lastStakeTime = block.timestamp (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1018)
	- user.rewardDebt[_rewardPid] = user.shares.mul(pool.accRewardPerShare[_rewardPid]).div(1e18) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1022)
Reentrancy in BvaultsBank.emergencyWithdraw(uint256) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1083-1100):
	External calls:
	- IStrategy(poolInfo[_pid].strategy).withdraw(msg.sender,amount) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1091)
	- pool.want.safeTransfer(address(msg.sender),amount) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1093)
	State variables written after the call(s):
	- user.shares = 0 (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1095)
	- user.rewardDebt[_rewardPid] = 0 (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1098)
Reentrancy in BvaultsBank.migrateStrategy(uint256,address) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#868-878):
	External calls:
	- IStrategy(_oldStrategy).withdraw(address(this),_oldWantAmt) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#874)
	- pool.want.transfer(_newStrategy,_oldWantAmt) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#875)
	- IStrategy(_newStrategy).migrateFrom(_oldStrategy,_oldWantAmt,_oldSharesTotal) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#876)
	State variables written after the call(s):
	- pool.strategy = _newStrategy (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#877)
Reentrancy in BvaultsBank.withdraw(uint256,uint256) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1032-1076):
	External calls:
	- _getReward(_pid) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1045)
		- IERC20(_rewardToken).transfer(_to,_bal) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1110)
		- IERC20(_rewardToken).transfer(_to,_amount) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1112)
	- sharesRemoved = IStrategy(poolInfo[_pid].strategy).withdraw(msg.sender,_wantAmt) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1053)
	State variables written after the call(s):
	- user.shares = 0 (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1056)
	- user.shares = user.shares.sub(sharesRemoved) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1058)
Reentrancy in BvaultsBank.withdraw(uint256,uint256) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1032-1076):
	External calls:
	- _getReward(_pid) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1045)
		- IERC20(_rewardToken).transfer(_to,_bal) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1110)
		- IERC20(_rewardToken).transfer(_to,_amount) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1112)
	- sharesRemoved = IStrategy(poolInfo[_pid].strategy).withdraw(msg.sender,_wantAmt) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1053)
	- pool.want.safeTransfer(address(msg.sender),_wantAmt) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1068)
	State variables written after the call(s):
	- user.rewardDebt[_rewardPid] = user.shares.mul(pool.accRewardPerShare[_rewardPid]).div(1e18) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1073)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
[93m
BvaultsBank.migrateStrategy(uint256,address) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#868-878) ignores return value by IStrategy(_oldStrategy).withdraw(address(this),_oldWantAmt) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#874)
BvaultsBank.emergencyWithdraw(uint256) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1083-1100) ignores return value by IStrategy(poolInfo[_pid].strategy).withdraw(msg.sender,amount) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1091)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return[0m
[92m
BvaultsBank.setTimelock(address) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1130-1133) should emit an event for: 
	- timelock = _timelock (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1132) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control[0m
[92m
BvaultsBank.add(uint256,IERC20,bool,address) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#840-853) should emit an event for: 
	- totalAllocPoint = totalAllocPoint.add(_allocPoint) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#851) 
BvaultsBank.set(uint256,uint256) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#856-860) should emit an event for: 
	- totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#858) 
BvaultsBank.setUnstakingFrozenTime(uint256) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#910-913) should emit an event for: 
	- unstakingFrozenTime = _unstakingFrozenTime (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#912) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic[0m
[92m
BvaultsBank.setTimelock(address)._timelock (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1130) lacks a zero-check on :
		- timelock = _timelock (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1132)
BvaultsBank.executeTransaction(address,uint256,string,bytes).target (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1149) lacks a zero-check on :
		- (success,returnData) = target.call{value: value}(callData) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1163)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation[0m
[92m
BvaultsBank.updatePool(uint256) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#961-982) has external calls inside a loop: sharesTotal = IStrategy(pool.strategy).sharesTotal() (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#966)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop[0m
[92m
Reentrancy in BvaultsBank._getReward(uint256) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#984-1000):
	External calls:
	- safeRewardTransfer(_rewardToken,msg.sender,_pending) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#994)
		- IERC20(_rewardToken).transfer(_to,_bal) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1110)
		- IERC20(_rewardToken).transfer(_to,_amount) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1112)
	Event emitted after the call(s):
	- RewardPaid(_rewardPid,_rewardToken,msg.sender,_pending) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#996)
Reentrancy in BvaultsBank.deposit(uint256,uint256) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1003-1025):
	External calls:
	- _getReward(_pid) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1010)
		- IERC20(_rewardToken).transfer(_to,_bal) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1110)
		- IERC20(_rewardToken).transfer(_to,_amount) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1112)
	- pool.want.safeTransferFrom(address(msg.sender),address(this),_wantAmt) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1013)
	- pool.want.safeIncreaseAllowance(pool.strategy,_wantAmt) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1015)
	- sharesAdded = IStrategy(poolInfo[_pid].strategy).deposit(msg.sender,_wantAmt) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1016)
	Event emitted after the call(s):
	- Deposit(msg.sender,_pid,_wantAmt) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1024)
Reentrancy in BvaultsBank.emergencyWithdraw(uint256) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1083-1100):
	External calls:
	- IStrategy(poolInfo[_pid].strategy).withdraw(msg.sender,amount) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1091)
	- pool.want.safeTransfer(address(msg.sender),amount) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1093)
	Event emitted after the call(s):
	- EmergencyWithdraw(msg.sender,_pid,amount) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1094)
Reentrancy in BvaultsBank.executeTransaction(address,uint256,string,bytes) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1148-1169):
	External calls:
	- (success,returnData) = target.call{value: value}(callData) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1163)
	Event emitted after the call(s):
	- ExecuteTransaction(target,value,signature,data) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1166)
Reentrancy in BvaultsBank.withdraw(uint256,uint256) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1032-1076):
	External calls:
	- _getReward(_pid) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1045)
		- IERC20(_rewardToken).transfer(_to,_bal) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1110)
		- IERC20(_rewardToken).transfer(_to,_amount) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1112)
	- sharesRemoved = IStrategy(poolInfo[_pid].strategy).withdraw(msg.sender,_wantAmt) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1053)
	- pool.want.safeTransfer(address(msg.sender),_wantAmt) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1068)
	Event emitted after the call(s):
	- Withdraw(msg.sender,_pid,_wantAmt) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1075)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
[92m
BvaultsBank.withdraw(uint256,uint256) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1032-1076) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(whitelisted[msg.sender] || block.timestamp >= unfrozenStakeTime(_pid,msg.sender),BvaultsBank: frozen) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1067)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
[92m
Address.isContract(address) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#348-359) uses assembly
	- INLINE ASM (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#355-357)
Address._verifyCallResult(bool,bytes,string) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#516-537) uses assembly
	- INLINE ASM (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#529-532)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
[92m
Address.functionCall(address,bytes) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#403-405) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#432-438) is never used and should be removed
Address.functionDelegateCall(address,bytes) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#494-496) is never used and should be removed
Address.functionDelegateCall(address,bytes,string) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#504-514) is never used and should be removed
Address.functionStaticCall(address,bytes) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#466-468) is never used and should be removed
Address.functionStaticCall(address,bytes,string) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#476-486) is never used and should be removed
Address.sendValue(address,uint256) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#377-383) is never used and should be removed
BvaultsBank.checkPoolDuplicate(IERC20) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#833-838) is never used and should be removed
Context._msgData() (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#20-23) is never used and should be removed
Context._msgSender() (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#16-18) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#577-588) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#599-606) is never used and should be removed
SafeMath.div(uint256,uint256,string) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#293-300) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#251-254) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#317-324) is never used and should be removed
SafeMath.sub(uint256,uint256,string) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#269-276) is never used and should be removed
SafeMath.tryAdd(uint256,uint256) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#123-127) is never used and should be removed
SafeMath.tryDiv(uint256,uint256) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#159-162) is never used and should be removed
SafeMath.tryMod(uint256,uint256) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#169-172) is never used and should be removed
SafeMath.tryMul(uint256,uint256) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#144-152) is never used and should be removed
SafeMath.trySub(uint256,uint256) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#134-137) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code[0m
[92m
Low level call in Address.sendValue(address,uint256) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#377-383):
	- (success) = recipient.call{value: amount}() (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#381)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#446-458):
	- (success,returndata) = target.call{value: value}(data) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#456)
Low level call in Address.functionStaticCall(address,bytes,string) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#476-486):
	- (success,returndata) = target.staticcall(data) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#484)
Low level call in Address.functionDelegateCall(address,bytes,string) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#504-514):
	- (success,returndata) = target.delegatecall(data) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#512)
Low level call in BvaultsBank.executeTransaction(address,uint256,string,bytes) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1148-1169):
	- (success,returnData) = target.call{value: value}(callData) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1163)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
[92m
Parameter BvaultsBank.initialize(uint256,address,uint256,address,uint256)._startBlock (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#798) is not in mixedCase
Parameter BvaultsBank.initialize(uint256,address,uint256,address,uint256)._bfi (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#799) is not in mixedCase
Parameter BvaultsBank.initialize(uint256,address,uint256,address,uint256)._bfiRewardRate (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#800) is not in mixedCase
Parameter BvaultsBank.initialize(uint256,address,uint256,address,uint256)._bdo (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#801) is not in mixedCase
Parameter BvaultsBank.initialize(uint256,address,uint256,address,uint256)._bdoRewardRate (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#802) is not in mixedCase
Parameter BvaultsBank.checkPoolDuplicate(IERC20)._want (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#833) is not in mixedCase
Parameter BvaultsBank.add(uint256,IERC20,bool,address)._allocPoint (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#841) is not in mixedCase
Parameter BvaultsBank.add(uint256,IERC20,bool,address)._want (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#842) is not in mixedCase
Parameter BvaultsBank.add(uint256,IERC20,bool,address)._withUpdate (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#843) is not in mixedCase
Parameter BvaultsBank.add(uint256,IERC20,bool,address)._strategy (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#844) is not in mixedCase
Parameter BvaultsBank.set(uint256,uint256)._pid (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#856) is not in mixedCase
Parameter BvaultsBank.set(uint256,uint256)._allocPoint (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#856) is not in mixedCase
Parameter BvaultsBank.resetStrategy(uint256,address)._pid (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#862) is not in mixedCase
Parameter BvaultsBank.resetStrategy(uint256,address)._strategy (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#862) is not in mixedCase
Parameter BvaultsBank.migrateStrategy(uint256,address)._pid (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#868) is not in mixedCase
Parameter BvaultsBank.migrateStrategy(uint256,address)._newStrategy (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#868) is not in mixedCase
Parameter BvaultsBank.addRewardPool(address,uint256)._rewardToken (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#884) is not in mixedCase
Parameter BvaultsBank.addRewardPool(address,uint256)._rewardPerBlock (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#884) is not in mixedCase
Parameter BvaultsBank.updateRewardToken(uint256,address,uint256)._rewardPid (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#891) is not in mixedCase
Parameter BvaultsBank.updateRewardToken(uint256,address,uint256)._rewardToken (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#892) is not in mixedCase
Parameter BvaultsBank.updateRewardToken(uint256,address,uint256)._rewardPerBlock (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#893) is not in mixedCase
Parameter BvaultsBank.updateRewardPerBlock(uint256,uint256)._rewardPid (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#904) is not in mixedCase
Parameter BvaultsBank.updateRewardPerBlock(uint256,uint256)._rewardPerBlock (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#904) is not in mixedCase
Parameter BvaultsBank.setUnstakingFrozenTime(uint256)._unstakingFrozenTime (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#910) is not in mixedCase
Parameter BvaultsBank.getMultiplier(uint256,uint256)._from (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#916) is not in mixedCase
Parameter BvaultsBank.getMultiplier(uint256,uint256)._to (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#916) is not in mixedCase
Parameter BvaultsBank.pendingReward(uint256,uint256,address)._pid (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#922) is not in mixedCase
Parameter BvaultsBank.pendingReward(uint256,uint256,address)._rewardPid (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#923) is not in mixedCase
Parameter BvaultsBank.pendingReward(uint256,uint256,address)._user (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#924) is not in mixedCase
Parameter BvaultsBank.stakedWantTokens(uint256,address)._pid (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#940) is not in mixedCase
Parameter BvaultsBank.stakedWantTokens(uint256,address)._user (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#940) is not in mixedCase
Parameter BvaultsBank.updatePool(uint256)._pid (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#961) is not in mixedCase
Parameter BvaultsBank.deposit(uint256,uint256)._pid (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1003) is not in mixedCase
Parameter BvaultsBank.deposit(uint256,uint256)._wantAmt (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1003) is not in mixedCase
Parameter BvaultsBank.unfrozenStakeTime(uint256,address)._pid (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1027) is not in mixedCase
Parameter BvaultsBank.unfrozenStakeTime(uint256,address)._account (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1027) is not in mixedCase
Parameter BvaultsBank.withdraw(uint256,uint256)._pid (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1032) is not in mixedCase
Parameter BvaultsBank.withdraw(uint256,uint256)._wantAmt (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1032) is not in mixedCase
Parameter BvaultsBank.withdrawAll(uint256)._pid (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1078) is not in mixedCase
Parameter BvaultsBank.emergencyWithdraw(uint256)._pid (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1083) is not in mixedCase
Parameter BvaultsBank.safeRewardTransfer(address,address,uint256)._rewardToken (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1104) is not in mixedCase
Parameter BvaultsBank.safeRewardTransfer(address,address,uint256)._to (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1105) is not in mixedCase
Parameter BvaultsBank.safeRewardTransfer(address,address,uint256)._amount (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1106) is not in mixedCase
Parameter BvaultsBank.setWhitelisted(address,bool)._account (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1116) is not in mixedCase
Parameter BvaultsBank.setWhitelisted(address,bool)._whitelisted (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1116) is not in mixedCase
Parameter BvaultsBank.setStopRewardPool(uint256,bool)._pid (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1120) is not in mixedCase
Parameter BvaultsBank.setStopRewardPool(uint256,bool)._stopRewardPool (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1120) is not in mixedCase
Parameter BvaultsBank.setPausePool(uint256,bool)._pid (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1124) is not in mixedCase
Parameter BvaultsBank.setPausePool(uint256,bool)._pausePool (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1124) is not in mixedCase
Parameter BvaultsBank.setTimelock(address)._timelock (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1130) is not in mixedCase
Parameter BvaultsBank.inCaseTokensGetStuck(address,uint256,address)._token (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1136) is not in mixedCase
Parameter BvaultsBank.inCaseTokensGetStuck(address,uint256,address)._amount (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1137) is not in mixedCase
Parameter BvaultsBank.inCaseTokensGetStuck(address,uint256,address)._to (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1138) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
[92m
Redundant expression "this (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#21)" inContext (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#15-24)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements[0m
[92m
initialize(uint256,address,uint256,address,uint256) should be declared external:
	- BvaultsBank.initialize(uint256,address,uint256,address,uint256) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#797-812)
add(uint256,IERC20,bool,address) should be declared external:
	- BvaultsBank.add(uint256,IERC20,bool,address) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#840-853)
set(uint256,uint256) should be declared external:
	- BvaultsBank.set(uint256,uint256) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#856-860)
resetStrategy(uint256,address) should be declared external:
	- BvaultsBank.resetStrategy(uint256,address) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#862-866)
migrateStrategy(uint256,address) should be declared external:
	- BvaultsBank.migrateStrategy(uint256,address) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#868-878)
deposit(uint256,uint256) should be declared external:
	- BvaultsBank.deposit(uint256,uint256) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1003-1025)
emergencyWithdraw(uint256) should be declared external:
	- BvaultsBank.emergencyWithdraw(uint256) (../../sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol#1083-1100)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
/sb/0x31b38ba067c8b9c63eca3fe14d724ffe10b6a2b2.sol analyzed (8 contracts with 78 detectors), 116 result(s) found
