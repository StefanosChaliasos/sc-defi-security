Compilation warnings/errors on /sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol:
Warning: This declaration shadows an existing declaration.
    --> /sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol:3563:5:
     |
3563 |     ControlledTokenInterface[] memory tokens = _tokens; // SLOAD  
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Note: The shadowed declaration is here:
    --> /sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol:3525:3:
     |
3525 |   function tokens() external override view returns (ControlledTokenInterface[] memory) {
     |   ^ (Relevant source part starts here and spans across multiple lines).

Warning: This declaration shadows an existing declaration.
    --> /sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol:3585:5:
     |
3585 |     ControlledTokenInterface[] memory tokens = _tokens; // SLOAD
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Note: The shadowed declaration is here:
    --> /sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol:3525:3:
     |
3525 |   function tokens() external override view returns (ControlledTokenInterface[] memory) {
     |   ^ (Relevant source part starts here and spans across multiple lines).

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> /sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol:2267:43:
     |
2267 |     function __ERC20Permit_init_unchained(string memory name) internal initializer {
     |                                           ^^^^^^^^^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> /sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol:3555:29:
     |
3555 |   function onERC721Received(address operator, address from, uint256 tokenId, bytes calldata data) external override returns (bytes4){
     |                             ^^^^^^^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> /sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol:3555:47:
     |
3555 |   function onERC721Received(address operator, address from, uint256 tokenId, bytes calldata data) external override returns (bytes4){
     |                                               ^^^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> /sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol:3555:61:
     |
3555 |   function onERC721Received(address operator, address from, uint256 tokenId, bytes calldata data) external override returns (bytes4){
     |                                                             ^^^^^^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> /sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol:3555:78:
     |
3555 |   function onERC721Received(address operator, address from, uint256 tokenId, bytes calldata data) external override returns (bytes4){
     |                                                                              ^^^^^^^^^^^^^^^^^^^

Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
    --> /sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol:3652:1:
     |
3652 | contract StakePrizePool is PrizePool {
     | ^ (Relevant source part starts here and spans across multiple lines).


[93m
PrizePool._calculateEarlyExitFeeLessBurnedCredit(address,address,uint256).availableCredit (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3475) is a local variable never initialized
PrizePool.awardExternalERC721(address,address,uint256[]).error (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3214) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables[0m
[92m
ERC20PermitUpgradeable.__ERC20Permit_init(string).name (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2261) shadows:
	- ERC20Upgradeable.name() (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1689-1691) (function)
ERC20PermitUpgradeable.__ERC20Permit_init_unchained(string).name (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2267) shadows:
	- ERC20Upgradeable.name() (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1689-1691) (function)
ControlledToken.initialize(string,string,uint8,TokenControllerInterface)._name (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2374) shadows:
	- ERC20Upgradeable._name (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1662) (state variable)
ControlledToken.initialize(string,string,uint8,TokenControllerInterface)._symbol (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2375) shadows:
	- ERC20Upgradeable._symbol (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1663) (state variable)
ControlledToken.initialize(string,string,uint8,TokenControllerInterface)._decimals (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2376) shadows:
	- ERC20Upgradeable._decimals (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1664) (state variable)
PrizePool._tokenTotalSupply().tokens (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3563) shadows:
	- PrizePool.tokens() (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3525-3527) (function)
	- PrizePoolInterface.tokens() (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2721) (function)
PrizePool._isControlled(ControlledTokenInterface).tokens (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3585) shadows:
	- PrizePool.tokens() (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3525-3527) (function)
	- PrizePoolInterface.tokens() (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2721) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
[92m
PrizePool._addControlledToken(ControlledTokenInterface,uint256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3500-3505) has external calls inside a loop: require(bool,string)(_controlledToken.controller() == this,PrizePool/token-ctrlr-mismatch) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3501)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop[0m
[92m
Variable 'PrizePool.awardExternalERC721(address,address,uint256[]).error (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3214)' in PrizePool.awardExternalERC721(address,address,uint256[]) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3196-3221) potentially used before declaration: ErrorAwardingExternalERC721(error) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3215)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables[0m
[92m
Reentrancy in PrizePool.award(address,uint256,address) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3100-3122):
	External calls:
	- _mint(to,amount,controlledToken,address(0)) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3116)
		- prizeStrategy.beforeTokenMint(to,amount,controlledToken,referrer) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3186)
		- ControlledToken(controlledToken).controllerMint(to,amount) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3188)
	State variables written after the call(s):
	- _accrueCredit(to,controlledToken,IERC20Upgradeable(controlledToken).balanceOf(to),extraCredit) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3119)
		- _tokenCreditBalances[controlledToken][user] = CreditBalance(newBalance.toUint128(),_currentTime().toUint32(),true) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3347-3351)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
[92m
Reentrancy in PrizePool.award(address,uint256,address) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3100-3122):
	External calls:
	- _mint(to,amount,controlledToken,address(0)) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3116)
		- prizeStrategy.beforeTokenMint(to,amount,controlledToken,referrer) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3186)
		- ControlledToken(controlledToken).controllerMint(to,amount) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3188)
	Event emitted after the call(s):
	- Awarded(to,controlledToken,amount) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3121)
	- CreditBurned(user,controlledToken,oldBalance.sub(newBalance)) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3357)
		- _accrueCredit(to,controlledToken,IERC20Upgradeable(controlledToken).balanceOf(to),extraCredit) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3119)
	- CreditMinted(user,controlledToken,newBalance.sub(oldBalance)) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3354)
		- _accrueCredit(to,controlledToken,IERC20Upgradeable(controlledToken).balanceOf(to),extraCredit) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3119)
Reentrancy in PrizePool.awardExternalERC20(address,address,uint256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3147-3158):
	External calls:
	- _transferOut(to,externalToken,amount) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3155)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1329)
		- IERC20Upgradeable(externalToken).safeTransfer(to,amount) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3174)
		- (success,returndata) = target.call{value: value}(data) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#426)
	External calls sending eth:
	- _transferOut(to,externalToken,amount) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3155)
		- (success,returndata) = target.call{value: value}(data) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#426)
	Event emitted after the call(s):
	- AwardedExternalERC20(to,externalToken,amount) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3156)
Reentrancy in PrizePool.awardExternalERC721(address,address,uint256[]) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3196-3221):
	External calls:
	- IERC721Upgradeable(externalToken).safeTransferFrom(address(this),to,tokenIds[i]) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3211-3216)
	Event emitted after the call(s):
	- ErrorAwardingExternalERC721(error) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3215)
Reentrancy in PrizePool.depositTo(address,uint256,address,address) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2953-2972):
	External calls:
	- _mint(to,amount,controlledToken,referrer) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2966)
		- prizeStrategy.beforeTokenMint(to,amount,controlledToken,referrer) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3186)
		- ControlledToken(controlledToken).controllerMint(to,amount) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3188)
	- _token().safeTransferFrom(operator,address(this),amount) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2968)
	Event emitted after the call(s):
	- Deposited(operator,to,controlledToken,amount,referrer) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2971)
Reentrancy in PrizePool.transferExternalERC20(address,address,uint256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3129-3140):
	External calls:
	- _transferOut(to,externalToken,amount) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3137)
		- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1329)
		- IERC20Upgradeable(externalToken).safeTransfer(to,amount) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3174)
		- (success,returndata) = target.call{value: value}(data) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#426)
	External calls sending eth:
	- _transferOut(to,externalToken,amount) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3137)
		- (success,returndata) = target.call{value: value}(data) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#426)
	Event emitted after the call(s):
	- TransferredExternalERC20(to,externalToken,amount) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3138)
Reentrancy in PrizePool.withdrawInstantlyFrom(address,uint256,address,uint256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2980-3009):
	External calls:
	- ControlledToken(controlledToken).controllerBurnFrom(_msgSender(),from,amount) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2998)
	- _token().safeTransfer(from,redeemed) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3004)
	Event emitted after the call(s):
	- InstantWithdrawal(_msgSender(),from,controlledToken,amount,redeemed,exitFee) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3006)
Reentrancy in PrizePool.withdrawReserve(address) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3082-3093):
	External calls:
	- _token().safeTransfer(address(to),redeemed) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3088)
	Event emitted after the call(s):
	- ReserveWithdrawal(to,amount) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3090)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
[92m
ERC20PermitUpgradeable.permit(address,address,uint256,uint256,uint8,bytes32,bytes32) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2274-2296) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp <= deadline,ERC20Permit: expired deadline) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2276)
PrizePool._updateCreditBalance(address,address,uint256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3344-3359) uses timestamp for comparisons
	Dangerous comparisons:
	- oldBalance < newBalance (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3353)
	- newBalance < oldBalance (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3356)
PrizePool._applyCreditLimit(address,uint256,uint256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3366-3376) uses timestamp for comparisons
	Dangerous comparisons:
	- creditBalance > creditLimit (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3371)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
[92m
AddressUpgradeable.isContract(address) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#333-342) uses assembly
	- INLINE ASM (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#340)
AddressUpgradeable._verifyCallResult(bool,bytes,string) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#454-471) uses assembly
	- INLINE ASM (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#463-466)
ECDSAUpgradeable.recover(bytes32,bytes) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2011-2032) uses assembly
	- INLINE ASM (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2025-2029)
EIP712Upgradeable._getChainId() (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2206-2212) uses assembly
	- INLINE ASM (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2209-2211)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
[92m
AddressUpgradeable.functionCall(address,bytes) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#386-388) is never used and should be removed
AddressUpgradeable.functionCallWithValue(address,bytes,uint256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#411-413) is never used and should be removed
AddressUpgradeable.functionStaticCall(address,bytes) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#436-438) is never used and should be removed
AddressUpgradeable.functionStaticCall(address,bytes,string) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#446-452) is never used and should be removed
AddressUpgradeable.sendValue(address,uint256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#360-366) is never used and should be removed
ContextUpgradeable.__Context_init() (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#608-610) is never used and should be removed
ContextUpgradeable._msgData() (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#618-621) is never used and should be removed
CountersUpgradeable.decrement(CountersUpgradeable.Counter) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2109-2111) is never used and should be removed
ECDSAUpgradeable.recover(bytes32,bytes) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2011-2032) is never used and should be removed
ECDSAUpgradeable.toEthSignedMessageHash(bytes32) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2066-2070) is never used and should be removed
EIP712Upgradeable.__EIP712_init(string,string) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2157-2159) is never used and should be removed
ERC165CheckerUpgradeable.getSupportedInterfaces(address,bytes4[]) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1181-1194) is never used and should be removed
ERC165CheckerUpgradeable.supportsAllInterfaces(address,bytes4[]) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1205-1220) is never used and should be removed
ERC20Upgradeable._beforeTokenTransfer(address,address,uint256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1930) is never used and should be removed
FixedPoint.calculateMantissa(uint256,uint256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1541-1545) is never used and should be removed
FixedPoint.divideUintByMantissa(uint256,uint256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1567-1571) is never used and should be removed
MappedSinglyLinkedList.addAddress(MappedSinglyLinkedList.Mapping,address) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2490-2496) is never used and should be removed
MappedSinglyLinkedList.addAddresses(MappedSinglyLinkedList.Mapping,address[]) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2481-2485) is never used and should be removed
MappedSinglyLinkedList.addressArray(MappedSinglyLinkedList.Mapping) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2522-2532) is never used and should be removed
MappedSinglyLinkedList.clearAll(MappedSinglyLinkedList.Mapping) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2536-2545) is never used and should be removed
MappedSinglyLinkedList.contains(MappedSinglyLinkedList.Mapping,address) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2514-2516) is never used and should be removed
MappedSinglyLinkedList.end(MappedSinglyLinkedList.Mapping) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2477-2479) is never used and should be removed
MappedSinglyLinkedList.initialize(MappedSinglyLinkedList.Mapping) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2464-2467) is never used and should be removed
MappedSinglyLinkedList.next(MappedSinglyLinkedList.Mapping,address) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2473-2475) is never used and should be removed
MappedSinglyLinkedList.removeAddress(MappedSinglyLinkedList.Mapping,address,address) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2502-2508) is never used and should be removed
MappedSinglyLinkedList.start(MappedSinglyLinkedList.Mapping) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2469-2471) is never used and should be removed
OpenZeppelinSafeMath_V3_3_0.add(uint256,uint256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1387-1392) is never used and should be removed
OpenZeppelinSafeMath_V3_3_0.mod(uint256,uint256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1497-1499) is never used and should be removed
OpenZeppelinSafeMath_V3_3_0.mod(uint256,uint256,string) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1513-1516) is never used and should be removed
OpenZeppelinSafeMath_V3_3_0.sub(uint256,uint256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1404-1406) is never used and should be removed
OpenZeppelinSafeMath_V3_3_0.sub(uint256,uint256,string) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1418-1423) is never used and should be removed
SafeCastUpgradeable.toInt128(int256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#818-821) is never used and should be removed
SafeCastUpgradeable.toInt16(int256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#872-875) is never used and should be removed
SafeCastUpgradeable.toInt256(uint256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#902-905) is never used and should be removed
SafeCastUpgradeable.toInt32(int256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#854-857) is never used and should be removed
SafeCastUpgradeable.toInt64(int256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#836-839) is never used and should be removed
SafeCastUpgradeable.toInt8(int256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#890-893) is never used and should be removed
SafeCastUpgradeable.toUint16(uint256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#773-776) is never used and should be removed
SafeCastUpgradeable.toUint256(int256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#800-803) is never used and should be removed
SafeCastUpgradeable.toUint64(uint256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#743-746) is never used and should be removed
SafeCastUpgradeable.toUint8(uint256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#788-791) is never used and should be removed
SafeERC20Upgradeable.safeApprove(IERC20Upgradeable,address,uint256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1297-1306) is never used and should be removed
SafeERC20Upgradeable.safeDecreaseAllowance(IERC20Upgradeable,address,uint256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1313-1316) is never used and should be removed
SafeERC20Upgradeable.safeIncreaseAllowance(IERC20Upgradeable,address,uint256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1308-1311) is never used and should be removed
SafeMathUpgradeable.div(uint256,uint256,string) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#190-193) is never used and should be removed
SafeMathUpgradeable.mod(uint256,uint256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#152-155) is never used and should be removed
SafeMathUpgradeable.mod(uint256,uint256,string) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#210-213) is never used and should be removed
SafeMathUpgradeable.tryAdd(uint256,uint256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#24-28) is never used and should be removed
SafeMathUpgradeable.tryDiv(uint256,uint256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#60-63) is never used and should be removed
SafeMathUpgradeable.tryMod(uint256,uint256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#70-73) is never used and should be removed
SafeMathUpgradeable.tryMul(uint256,uint256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#45-53) is never used and should be removed
SafeMathUpgradeable.trySub(uint256,uint256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#35-38) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code[0m
[92m
Low level call in AddressUpgradeable.sendValue(address,uint256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#360-366):
	- (success) = recipient.call{value: amount}() (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#364)
Low level call in AddressUpgradeable.functionCallWithValue(address,bytes,uint256,string) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#421-428):
	- (success,returndata) = target.call{value: value}(data) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#426)
Low level call in AddressUpgradeable.functionStaticCall(address,bytes,string) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#446-452):
	- (success,returndata) = target.staticcall(data) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#450)
Low level call in ERC165CheckerUpgradeable._callERC165SupportsInterface(address,bytes4) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1249-1258):
	- (success,result) = account.staticcall{gas: 30000}(encodedParams) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1255)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
[92m
Function ContextUpgradeable.__Context_init() (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#608-610) is not in mixedCase
Function ContextUpgradeable.__Context_init_unchained() (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#612-613) is not in mixedCase
Variable ContextUpgradeable.__gap (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#622) is not in mixedCase
Function OwnableUpgradeable.__Ownable_init() (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#646-649) is not in mixedCase
Function OwnableUpgradeable.__Ownable_init_unchained() (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#651-655) is not in mixedCase
Variable OwnableUpgradeable.__gap (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#693) is not in mixedCase
Function ReentrancyGuardUpgradeable.__ReentrancyGuard_init() (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#946-948) is not in mixedCase
Function ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained() (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#950-952) is not in mixedCase
Variable ReentrancyGuardUpgradeable.__gap (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#974) is not in mixedCase
Contract OpenZeppelinSafeMath_V3_3_0 (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1376-1517) is not in CapWords
Function ERC20Upgradeable.__ERC20_init(string,string) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1675-1678) is not in mixedCase
Function ERC20Upgradeable.__ERC20_init_unchained(string,string) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1680-1684) is not in mixedCase
Variable ERC20Upgradeable.__gap (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1931) is not in mixedCase
Function IERC20PermitUpgradeable.DOMAIN_SEPARATOR() (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1983) is not in mixedCase
Function EIP712Upgradeable.__EIP712_init(string,string) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2157-2159) is not in mixedCase
Function EIP712Upgradeable.__EIP712_init_unchained(string,string) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2161-2166) is not in mixedCase
Function EIP712Upgradeable._EIP712NameHash() (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2220-2222) is not in mixedCase
Function EIP712Upgradeable._EIP712VersionHash() (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2230-2232) is not in mixedCase
Variable EIP712Upgradeable._HASHED_NAME (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2140) is not in mixedCase
Variable EIP712Upgradeable._HASHED_VERSION (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2141) is not in mixedCase
Variable EIP712Upgradeable.__gap (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2233) is not in mixedCase
Function ERC20PermitUpgradeable.__ERC20Permit_init(string) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2261-2265) is not in mixedCase
Function ERC20PermitUpgradeable.__ERC20Permit_init_unchained(string) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2267-2269) is not in mixedCase
Function ERC20PermitUpgradeable.DOMAIN_SEPARATOR() (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2309-2311) is not in mixedCase
Variable ERC20PermitUpgradeable.__gap (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2312) is not in mixedCase
Variable ERC20PermitUpgradeable._PERMIT_TYPEHASH (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2254) is not in mixedCase
Parameter ControlledToken.initialize(string,string,uint8,TokenControllerInterface)._name (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2374) is not in mixedCase
Parameter ControlledToken.initialize(string,string,uint8,TokenControllerInterface)._symbol (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2375) is not in mixedCase
Parameter ControlledToken.initialize(string,string,uint8,TokenControllerInterface)._decimals (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2376) is not in mixedCase
Parameter ControlledToken.initialize(string,string,uint8,TokenControllerInterface)._controller (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2377) is not in mixedCase
Parameter ControlledToken.controllerMint(address,uint256)._user (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2401) is not in mixedCase
Parameter ControlledToken.controllerMint(address,uint256)._amount (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2401) is not in mixedCase
Parameter ControlledToken.controllerBurn(address,uint256)._user (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2409) is not in mixedCase
Parameter ControlledToken.controllerBurn(address,uint256)._amount (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2409) is not in mixedCase
Parameter ControlledToken.controllerBurnFrom(address,address,uint256)._operator (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2418) is not in mixedCase
Parameter ControlledToken.controllerBurnFrom(address,address,uint256)._user (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2418) is not in mixedCase
Parameter ControlledToken.controllerBurnFrom(address,address,uint256)._amount (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2418) is not in mixedCase
Parameter PrizePool.initialize(RegistryInterface,ControlledTokenInterface[],uint256)._reserveRegistry (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2895) is not in mixedCase
Parameter PrizePool.initialize(RegistryInterface,ControlledTokenInterface[],uint256)._controlledTokens (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2896) is not in mixedCase
Parameter PrizePool.initialize(RegistryInterface,ControlledTokenInterface[],uint256)._maxExitFeeMantissa (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2897) is not in mixedCase
Parameter PrizePool.canAwardExternal(address)._externalToken (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2944) is not in mixedCase
Parameter PrizePool.estimateCreditAccrualTime(address,uint256,uint256)._controlledToken (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3273) is not in mixedCase
Parameter PrizePool.estimateCreditAccrualTime(address,uint256,uint256)._principal (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3274) is not in mixedCase
Parameter PrizePool.estimateCreditAccrualTime(address,uint256,uint256)._interest (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3275) is not in mixedCase
Parameter PrizePool.setCreditPlanOf(address,uint128,uint128)._controlledToken (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3408) is not in mixedCase
Parameter PrizePool.setCreditPlanOf(address,uint128,uint128)._creditRateMantissa (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3409) is not in mixedCase
Parameter PrizePool.setCreditPlanOf(address,uint128,uint128)._creditLimitMantissa (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3410) is not in mixedCase
Parameter PrizePool.setLiquidityCap(uint256)._liquidityCap (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3488) is not in mixedCase
Parameter PrizePool.setPrizeStrategy(TokenListenerInterface)._prizeStrategy (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3509) is not in mixedCase
Variable PrizePool._tokens (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2865) is not in mixedCase
Variable PrizePool._currentAwardBalance (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2881) is not in mixedCase
Variable PrizePool._tokenCreditPlans (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2886) is not in mixedCase
Variable PrizePool._tokenCreditBalances (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2889) is not in mixedCase
Parameter StakePrizePool.initialize(RegistryInterface,ControlledTokenInterface[],uint256,IERC20Upgradeable)._reserveRegistry (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3663) is not in mixedCase
Parameter StakePrizePool.initialize(RegistryInterface,ControlledTokenInterface[],uint256,IERC20Upgradeable)._controlledTokens (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3664) is not in mixedCase
Parameter StakePrizePool.initialize(RegistryInterface,ControlledTokenInterface[],uint256,IERC20Upgradeable)._maxExitFeeMantissa (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3665) is not in mixedCase
Parameter StakePrizePool.initialize(RegistryInterface,ControlledTokenInterface[],uint256,IERC20Upgradeable)._stakeToken (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3666) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
[92m
Redundant expression "this (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#619)" inContextUpgradeable (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#607-623)
Redundant expression "this (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2207)" inEIP712Upgradeable (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2138-2234)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements[0m
[92m
ERC20PermitUpgradeable.__gap (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2312) is never used in ControlledToken (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2355-2441)
ReentrancyGuardUpgradeable.__gap (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#974) is never used in StakePrizePool (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3652-3714)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable[0m
[92m
renounceOwnership() should be declared external:
	- OwnableUpgradeable.renounceOwnership() (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#679-682)
transferOwnership(address) should be declared external:
	- OwnableUpgradeable.transferOwnership(address) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#688-692)
name() should be declared external:
	- ERC20Upgradeable.name() (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1689-1691)
symbol() should be declared external:
	- ERC20Upgradeable.symbol() (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1697-1699)
decimals() should be declared external:
	- ERC20Upgradeable.decimals() (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1714-1716)
totalSupply() should be declared external:
	- ERC20Upgradeable.totalSupply() (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1721-1723)
balanceOf(address) should be declared external:
	- ERC20Upgradeable.balanceOf(address) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1728-1730)
transfer(address,uint256) should be declared external:
	- ERC20Upgradeable.transfer(address,uint256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1740-1743)
approve(address,uint256) should be declared external:
	- ERC20Upgradeable.approve(address,uint256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1759-1762)
transferFrom(address,address,uint256) should be declared external:
	- ERC20Upgradeable.transferFrom(address,address,uint256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1777-1781)
increaseAllowance(address,uint256) should be declared external:
	- ERC20Upgradeable.increaseAllowance(address,uint256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1795-1798)
decreaseAllowance(address,uint256) should be declared external:
	- ERC20Upgradeable.decreaseAllowance(address,uint256) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#1814-1817)
permit(address,address,uint256,uint256,uint8,bytes32,bytes32) should be declared external:
	- ERC20PermitUpgradeable.permit(address,address,uint256,uint256,uint8,bytes32,bytes32) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2274-2296)
nonces(address) should be declared external:
	- ERC20PermitUpgradeable.nonces(address) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2301-2303)
initialize(string,string,uint8,TokenControllerInterface) should be declared external:
	- ControlledToken.initialize(string,string,uint8,TokenControllerInterface) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#2373-2395)
initialize(RegistryInterface,ControlledTokenInterface[],uint256,IERC20Upgradeable) should be declared external:
	- StakePrizePool.initialize(RegistryInterface,ControlledTokenInterface[],uint256,IERC20Upgradeable) (../../sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol#3662-3681)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
/sb/0xa32d22f654c02693df70ac265ffa8b5e348b050a.sol analyzed (33 contracts with 78 detectors), 159 result(s) found
