Compilation warnings/errors on /sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol:
Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
    --> /sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol:1414:1:
     |
1414 | contract DVM is DVMTrader, DVMFunding {
     | ^ (Relevant source part starts here and spans across multiple lines).


[91m
DVMVault._twapUpdate() (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#932-939) uses a weak PRNG: "blockTimestamp = uint32(block.timestamp % 2 ** 32) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#933)" 
DVM.init(address,address,address,uint256,address,uint256,uint256,bool) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1415-1465) uses a weak PRNG: "_BLOCK_TIMESTAMP_LAST_ = uint32(block.timestamp % 2 ** 32) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1440)" 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#weak-PRNG[0m
[93m
DODOMath._SolveQuadraticFunctionForTarget(uint256,uint256,uint256,uint256) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#417-446) performs a multiplication on the result of a division:
	-sqrt = ki.div(V1).mul(delta).add(DecimalMath.ONE2).sqrt() (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#440)
DODOMath._SolveQuadraticFunctionForTrade(uint256,uint256,uint256,uint256,uint256) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#473-551) performs a multiplication on the result of a division:
	-part2 = k.mul(V0).div(V1).mul(V0).add(i.mul(delta)) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#515)
DODOMath._SolveQuadraticFunctionForTrade(uint256,uint256,uint256,uint256,uint256) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#473-551) performs a multiplication on the result of a division:
	-temp = (idelta * V1).div(V0.mul(V0)) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#501)
	-V1.mul(temp).div(temp.add(DecimalMath.ONE)) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#505)
DODOMath._SolveQuadraticFunctionForTrade(uint256,uint256,uint256,uint256,uint256) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#473-551) performs a multiplication on the result of a division:
	-temp = delta.mul(V1).div(V0).mul(i).div(V0) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#503)
DODOMath._SolveQuadraticFunctionForTrade(uint256,uint256,uint256,uint256,uint256) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#473-551) performs a multiplication on the result of a division:
	-bAbs = bAbs.div(DecimalMath.ONE) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#526)
	-squareRoot = bAbs.mul(bAbs).add(squareRoot).sqrt() (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#534)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply[0m
[93m
DVMFunding.buyShares(address) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1323-1360) uses a dangerous strict equality:
	- totalSupply == 0 (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1343)
DVMFunding.buyShares(address) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1323-1360) uses a dangerous strict equality:
	- baseReserve > 0 && quoteReserve == 0 (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1347)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities[0m
[93m
Reentrancy in DVMTrader.flashLoan(uint256,uint256,address,bytes) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1217-1275):
	External calls:
	- _transferBaseOut(assetTo,baseAmount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1223)
		- _BASE_TOKEN_.safeTransfer(to,amount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#974)
		- (success,returndata) = address(token).call(data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#329)
	- _transferQuoteOut(assetTo,quoteAmount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1224)
		- _QUOTE_TOKEN_.safeTransfer(to,amount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#980)
		- (success,returndata) = address(token).call(data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#329)
	- IDODOCallee(assetTo).DVMFlashLoanCall(msg.sender,baseAmount,quoteAmount,data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1227)
	- _transferBaseOut(_MAINTAINER_,mtFee) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1244)
		- _BASE_TOKEN_.safeTransfer(to,amount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#974)
		- (success,returndata) = address(token).call(data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#329)
	- _transferQuoteOut(_MAINTAINER_,mtFee_scope_0) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1261)
		- _QUOTE_TOKEN_.safeTransfer(to,amount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#980)
		- (success,returndata) = address(token).call(data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#329)
	State variables written after the call(s):
	- _sync() (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1272)
		- _BASE_RESERVE_ = uint112(baseBalance) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#956)
	- _sync() (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1272)
		- _QUOTE_RESERVE_ = uint112(quoteBalance) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#959)
Reentrancy in DVMTrader.sellBase(address) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1169-1191):
	External calls:
	- _transferQuoteOut(to,receiveQuoteAmount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1179)
		- _QUOTE_TOKEN_.safeTransfer(to,amount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#980)
		- (success,returndata) = address(token).call(data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#329)
	- _transferQuoteOut(_MAINTAINER_,mtFee) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1180)
		- _QUOTE_TOKEN_.safeTransfer(to,amount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#980)
		- (success,returndata) = address(token).call(data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#329)
	State variables written after the call(s):
	- _setReserve(baseBalance,_QUOTE_TOKEN_.balanceOf(address(this))) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1181)
		- _BASE_RESERVE_ = uint112(baseReserve) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#945)
	- _setReserve(baseBalance,_QUOTE_TOKEN_.balanceOf(address(this))) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1181)
		- _QUOTE_RESERVE_ = uint112(quoteReserve) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#946)
Reentrancy in DVMTrader.sellQuote(address) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1193-1215):
	External calls:
	- _transferBaseOut(to,receiveBaseAmount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1203)
		- _BASE_TOKEN_.safeTransfer(to,amount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#974)
		- (success,returndata) = address(token).call(data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#329)
	- _transferBaseOut(_MAINTAINER_,mtFee) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1204)
		- _BASE_TOKEN_.safeTransfer(to,amount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#974)
		- (success,returndata) = address(token).call(data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#329)
	State variables written after the call(s):
	- _setReserve(_BASE_TOKEN_.balanceOf(address(this)),quoteBalance) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1205)
		- _BASE_RESERVE_ = uint112(baseReserve) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#945)
	- _setReserve(_BASE_TOKEN_.balanceOf(address(this)),quoteBalance) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1205)
		- _QUOTE_RESERVE_ = uint112(quoteReserve) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#946)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
[93m
DVMTrader.flashLoan(uint256,uint256,address,bytes).mtFee_scope_0 (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1258) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables[0m
[92m
InitializableOwnable.initOwner(address).newOwner (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#44) lacks a zero-check on :
		- _OWNER_ = newOwner (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#46)
InitializableOwnable.transferOwnership(address).newOwner (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#49) lacks a zero-check on :
		- _NEW_OWNER_ = newOwner (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#51)
FeeRateModel.setFeeProxy(address)._feeRateImpl (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#77) lacks a zero-check on :
		- feeRateImpl = _feeRateImpl (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#78)
DVM.init(address,address,address,uint256,address,uint256,uint256,bool).maintainer (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1416) lacks a zero-check on :
		- _MAINTAINER_ = maintainer (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1437)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation[0m
[92m
Variable 'DVMTrader.flashLoan(uint256,uint256,address,bytes).mtFee (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1241)' in DVMTrader.flashLoan(uint256,uint256,address,bytes) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1217-1275) potentially used before declaration: (receiveQuoteAmount,mtFee) = querySellBase(tx.origin,baseInput) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1258)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables[0m
[92m
Reentrancy in DVMTrader.flashLoan(uint256,uint256,address,bytes) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1217-1275):
	External calls:
	- _transferBaseOut(assetTo,baseAmount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1223)
		- _BASE_TOKEN_.safeTransfer(to,amount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#974)
		- (success,returndata) = address(token).call(data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#329)
	- _transferQuoteOut(assetTo,quoteAmount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1224)
		- _QUOTE_TOKEN_.safeTransfer(to,amount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#980)
		- (success,returndata) = address(token).call(data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#329)
	- IDODOCallee(assetTo).DVMFlashLoanCall(msg.sender,baseAmount,quoteAmount,data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1227)
	- _transferBaseOut(_MAINTAINER_,mtFee) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1244)
		- _BASE_TOKEN_.safeTransfer(to,amount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#974)
		- (success,returndata) = address(token).call(data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#329)
	- _transferQuoteOut(_MAINTAINER_,mtFee_scope_0) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1261)
		- _QUOTE_TOKEN_.safeTransfer(to,amount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#980)
		- (success,returndata) = address(token).call(data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#329)
	State variables written after the call(s):
	- _sync() (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1272)
		- _BASE_PRICE_CUMULATIVE_LAST_ += getMidPrice() * timeElapsed (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#936)
	- _sync() (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1272)
		- _BLOCK_TIMESTAMP_LAST_ = blockTimestamp (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#938)
Reentrancy in DVMTrader.sellBase(address) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1169-1191):
	External calls:
	- _transferQuoteOut(to,receiveQuoteAmount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1179)
		- _QUOTE_TOKEN_.safeTransfer(to,amount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#980)
		- (success,returndata) = address(token).call(data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#329)
	- _transferQuoteOut(_MAINTAINER_,mtFee) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1180)
		- _QUOTE_TOKEN_.safeTransfer(to,amount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#980)
		- (success,returndata) = address(token).call(data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#329)
	State variables written after the call(s):
	- _setReserve(baseBalance,_QUOTE_TOKEN_.balanceOf(address(this))) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1181)
		- _BASE_PRICE_CUMULATIVE_LAST_ += getMidPrice() * timeElapsed (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#936)
	- _setReserve(baseBalance,_QUOTE_TOKEN_.balanceOf(address(this))) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1181)
		- _BLOCK_TIMESTAMP_LAST_ = blockTimestamp (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#938)
Reentrancy in DVMTrader.sellQuote(address) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1193-1215):
	External calls:
	- _transferBaseOut(to,receiveBaseAmount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1203)
		- _BASE_TOKEN_.safeTransfer(to,amount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#974)
		- (success,returndata) = address(token).call(data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#329)
	- _transferBaseOut(_MAINTAINER_,mtFee) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1204)
		- _BASE_TOKEN_.safeTransfer(to,amount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#974)
		- (success,returndata) = address(token).call(data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#329)
	State variables written after the call(s):
	- _setReserve(_BASE_TOKEN_.balanceOf(address(this)),quoteBalance) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1205)
		- _BASE_PRICE_CUMULATIVE_LAST_ += getMidPrice() * timeElapsed (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#936)
	- _setReserve(_BASE_TOKEN_.balanceOf(address(this)),quoteBalance) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1205)
		- _BLOCK_TIMESTAMP_LAST_ = blockTimestamp (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#938)
Reentrancy in DVMFunding.sellShares(uint256,address,uint256,uint256,bytes,uint256) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1363-1401):
	External calls:
	- _transferBaseOut(to,baseAmount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1386)
		- _BASE_TOKEN_.safeTransfer(to,amount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#974)
		- (success,returndata) = address(token).call(data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#329)
	- _transferQuoteOut(to,quoteAmount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1387)
		- _QUOTE_TOKEN_.safeTransfer(to,amount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#980)
		- (success,returndata) = address(token).call(data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#329)
	State variables written after the call(s):
	- _sync() (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1388)
		- _BASE_PRICE_CUMULATIVE_LAST_ += getMidPrice() * timeElapsed (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#936)
	- _sync() (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1388)
		- _BASE_RESERVE_ = uint112(baseBalance) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#956)
	- _sync() (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1388)
		- _BLOCK_TIMESTAMP_LAST_ = blockTimestamp (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#938)
	- _sync() (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1388)
		- _QUOTE_RESERVE_ = uint112(quoteBalance) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#959)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
[92m
Reentrancy in DVMTrader.flashLoan(uint256,uint256,address,bytes) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1217-1275):
	External calls:
	- _transferBaseOut(assetTo,baseAmount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1223)
		- _BASE_TOKEN_.safeTransfer(to,amount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#974)
		- (success,returndata) = address(token).call(data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#329)
	- _transferQuoteOut(assetTo,quoteAmount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1224)
		- _QUOTE_TOKEN_.safeTransfer(to,amount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#980)
		- (success,returndata) = address(token).call(data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#329)
	- IDODOCallee(assetTo).DVMFlashLoanCall(msg.sender,baseAmount,quoteAmount,data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1227)
	- _transferBaseOut(_MAINTAINER_,mtFee) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1244)
		- _BASE_TOKEN_.safeTransfer(to,amount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#974)
		- (success,returndata) = address(token).call(data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#329)
	Event emitted after the call(s):
	- DODOSwap(address(_QUOTE_TOKEN_),address(_BASE_TOKEN_),quoteInput,receiveBaseAmount,msg.sender,assetTo) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1245-1252)
Reentrancy in DVMTrader.flashLoan(uint256,uint256,address,bytes) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1217-1275):
	External calls:
	- _transferBaseOut(assetTo,baseAmount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1223)
		- _BASE_TOKEN_.safeTransfer(to,amount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#974)
		- (success,returndata) = address(token).call(data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#329)
	- _transferQuoteOut(assetTo,quoteAmount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1224)
		- _QUOTE_TOKEN_.safeTransfer(to,amount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#980)
		- (success,returndata) = address(token).call(data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#329)
	- IDODOCallee(assetTo).DVMFlashLoanCall(msg.sender,baseAmount,quoteAmount,data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1227)
	- _transferBaseOut(_MAINTAINER_,mtFee) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1244)
		- _BASE_TOKEN_.safeTransfer(to,amount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#974)
		- (success,returndata) = address(token).call(data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#329)
	- _transferQuoteOut(_MAINTAINER_,mtFee_scope_0) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1261)
		- _QUOTE_TOKEN_.safeTransfer(to,amount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#980)
		- (success,returndata) = address(token).call(data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#329)
	Event emitted after the call(s):
	- DODOFlashLoan(msg.sender,assetTo,baseAmount,quoteAmount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1274)
	- DODOSwap(address(_BASE_TOKEN_),address(_QUOTE_TOKEN_),baseInput,receiveQuoteAmount,msg.sender,assetTo) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1262-1269)
Reentrancy in DVMTrader.sellBase(address) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1169-1191):
	External calls:
	- _transferQuoteOut(to,receiveQuoteAmount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1179)
		- _QUOTE_TOKEN_.safeTransfer(to,amount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#980)
		- (success,returndata) = address(token).call(data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#329)
	- _transferQuoteOut(_MAINTAINER_,mtFee) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1180)
		- _QUOTE_TOKEN_.safeTransfer(to,amount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#980)
		- (success,returndata) = address(token).call(data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#329)
	Event emitted after the call(s):
	- DODOSwap(address(_BASE_TOKEN_),address(_QUOTE_TOKEN_),baseInput,receiveQuoteAmount,msg.sender,to) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1183-1190)
Reentrancy in DVMTrader.sellQuote(address) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1193-1215):
	External calls:
	- _transferBaseOut(to,receiveBaseAmount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1203)
		- _BASE_TOKEN_.safeTransfer(to,amount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#974)
		- (success,returndata) = address(token).call(data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#329)
	- _transferBaseOut(_MAINTAINER_,mtFee) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1204)
		- _BASE_TOKEN_.safeTransfer(to,amount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#974)
		- (success,returndata) = address(token).call(data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#329)
	Event emitted after the call(s):
	- DODOSwap(address(_QUOTE_TOKEN_),address(_BASE_TOKEN_),quoteInput,receiveBaseAmount,msg.sender,to) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1207-1214)
Reentrancy in DVMFunding.sellShares(uint256,address,uint256,uint256,bytes,uint256) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1363-1401):
	External calls:
	- _transferBaseOut(to,baseAmount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1386)
		- _BASE_TOKEN_.safeTransfer(to,amount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#974)
		- (success,returndata) = address(token).call(data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#329)
	- _transferQuoteOut(to,quoteAmount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1387)
		- _QUOTE_TOKEN_.safeTransfer(to,amount) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#980)
		- (success,returndata) = address(token).call(data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#329)
	- IDODOCallee(to).DVMSellShareCall(msg.sender,shareAmount,baseAmount,quoteAmount,data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1391-1397)
	Event emitted after the call(s):
	- SellShares(msg.sender,to,shareAmount,_SHARES_[msg.sender]) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1400)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
[92m
DVMVault._twapUpdate() (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#932-939) uses timestamp for comparisons
	Dangerous comparisons:
	- timeElapsed > 0 && _BASE_RESERVE_ != 0 && _QUOTE_RESERVE_ != 0 (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#935)
DVMVault.permit(address,address,uint256,uint256,uint8,bytes32,bytes32) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1075-1100) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(deadline >= block.timestamp,DODO_DVM_LP: EXPIRED) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1084)
DVMFunding.sellShares(uint256,address,uint256,uint256,bytes,uint256) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1363-1401) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(deadline >= block.timestamp,TIME_EXPIRED) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1371)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
[92m
DVM.init(address,address,address,uint256,address,uint256,uint256,bool) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1415-1465) uses assembly
	- INLINE ASM (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1451-1453)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
[92m
DecimalMath.mulCeil(uint256,uint256) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#237-239) is never used and should be removed
DecimalMath.reciprocalCeil(uint256) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#253-255) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#296-310) is never used and should be removed
SafeERC20.safeTransferFrom(IERC20,address,address,uint256) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#284-294) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code[0m
[92m
Pragma version^0.6.9 (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#10) is known to contain severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
[92m
Low level call in SafeERC20._callOptionalReturn(IERC20,bytes) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#318-337):
	- (success,returndata) = address(token).call(data) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#329)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
[92m
FeeRateModel (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#74-86) should inherit from IFeeRateModel (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#70-72)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-inheritance[0m
[92m
Variable InitializableOwnable._OWNER_ (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#20) is not in mixedCase
Variable InitializableOwnable._NEW_OWNER_ (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#21) is not in mixedCase
Variable InitializableOwnable._INITIALIZED_ (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#22) is not in mixedCase
Parameter FeeRateModel.setFeeProxy(address)._feeRateImpl (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#77) is not in mixedCase
Variable ReentrancyGuard._ENTERED_ (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#352) is not in mixedCase
Function DODOMath._GeneralIntegrate(uint256,uint256,uint256,uint256,uint256) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#388-403) is not in mixedCase
Parameter DODOMath._GeneralIntegrate(uint256,uint256,uint256,uint256,uint256).V0 (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#389) is not in mixedCase
Parameter DODOMath._GeneralIntegrate(uint256,uint256,uint256,uint256,uint256).V1 (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#390) is not in mixedCase
Parameter DODOMath._GeneralIntegrate(uint256,uint256,uint256,uint256,uint256).V2 (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#391) is not in mixedCase
Function DODOMath._SolveQuadraticFunctionForTarget(uint256,uint256,uint256,uint256) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#417-446) is not in mixedCase
Parameter DODOMath._SolveQuadraticFunctionForTarget(uint256,uint256,uint256,uint256).V1 (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#418) is not in mixedCase
Function DODOMath._SolveQuadraticFunctionForTrade(uint256,uint256,uint256,uint256,uint256) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#473-551) is not in mixedCase
Parameter DODOMath._SolveQuadraticFunctionForTrade(uint256,uint256,uint256,uint256,uint256).V0 (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#474) is not in mixedCase
Parameter DODOMath._SolveQuadraticFunctionForTrade(uint256,uint256,uint256,uint256,uint256).V1 (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#475) is not in mixedCase
Function PMMPricing._ROneSellBaseToken(PMMPricing.PMMState,uint256) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#660-677) is not in mixedCase
Function PMMPricing._ROneSellQuoteToken(PMMPricing.PMMState,uint256) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#679-694) is not in mixedCase
Function PMMPricing._RBelowSellQuoteToken(PMMPricing.PMMState,uint256) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#698-713) is not in mixedCase
Function PMMPricing._RBelowSellBaseToken(PMMPricing.PMMState,uint256) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#715-730) is not in mixedCase
Function PMMPricing._RAboveSellBaseToken(PMMPricing.PMMState,uint256) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#734-749) is not in mixedCase
Function PMMPricing._RAboveSellQuoteToken(PMMPricing.PMMState,uint256) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#751-766) is not in mixedCase
Variable DVMStorage._IS_OPEN_TWAP_ (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#807) is not in mixedCase
Variable DVMStorage._MAINTAINER_ (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#811) is not in mixedCase
Variable DVMStorage._BASE_TOKEN_ (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#813) is not in mixedCase
Variable DVMStorage._QUOTE_TOKEN_ (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#814) is not in mixedCase
Variable DVMStorage._BASE_RESERVE_ (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#816) is not in mixedCase
Variable DVMStorage._QUOTE_RESERVE_ (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#817) is not in mixedCase
Variable DVMStorage._BLOCK_TIMESTAMP_LAST_ (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#818) is not in mixedCase
Variable DVMStorage._BASE_PRICE_CUMULATIVE_LAST_ (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#820) is not in mixedCase
Variable DVMStorage._SHARES_ (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#829) is not in mixedCase
Variable DVMStorage._ALLOWED_ (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#830) is not in mixedCase
Variable DVMStorage.DOMAIN_SEPARATOR (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#834) is not in mixedCase
Variable DVMStorage._LP_FEE_RATE_ (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#841) is not in mixedCase
Variable DVMStorage._MT_FEE_RATE_MODEL_ (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#842) is not in mixedCase
Variable DVMStorage._K_ (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#843) is not in mixedCase
Variable DVMStorage._I_ (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#844) is not in mixedCase
Function IDODOCallee.DVMSellShareCall(address,uint256,uint256,uint256,bytes) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1106-1112) is not in mixedCase
Function IDODOCallee.DVMFlashLoanCall(address,uint256,uint256,bytes) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1114-1119) is not in mixedCase
Function IDODOCallee.DPPFlashLoanCall(address,uint256,uint256,bytes) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1121-1126) is not in mixedCase
Function IDODOCallee.CPCancelCall(address,uint256,bytes) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1128-1132) is not in mixedCase
Function IDODOCallee.CPClaimBidCall(address,uint256,uint256,bytes) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1134-1139) is not in mixedCase
Parameter DVM.addressToShortString(address)._addr (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1467) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
[92m
DecimalMath.ONE (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#230) is never used in DecimalMath (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#227-256)
DecimalMath.ONE2 (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#231) is never used in DecimalMath (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#227-256)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable[0m
[92m
initOwner(address) should be declared external:
	- InitializableOwnable.initOwner(address) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#44-47)
transferOwnership(address) should be declared external:
	- InitializableOwnable.transferOwnership(address) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#49-52)
claimOwnership() should be declared external:
	- InitializableOwnable.claimOwnership() (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#54-59)
setFeeProxy(address) should be declared external:
	- FeeRateModel.setFeeProxy(address) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#77-79)
getBaseInput() should be declared external:
	- DVMVault.getBaseInput() (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#922-924)
getQuoteInput() should be declared external:
	- DVMVault.getQuoteInput() (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#926-928)
transfer(address,uint256) should be declared external:
	- DVMVault.transfer(address,uint256) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#991-998)
transferFrom(address,address,uint256) should be declared external:
	- DVMVault.transferFrom(address,address,uint256) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1015-1028)
approve(address,uint256) should be declared external:
	- DVMVault.approve(address,uint256) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1035-1038)
allowance(address,address) should be declared external:
	- DVMVault.allowance(address,address) (../../sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol#1055-1057)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
/sb/0x2bbd66fc4898242bdbd2583bbe1d76e8b8f71445.sol analyzed (17 contracts with 78 detectors), 91 result(s) found
