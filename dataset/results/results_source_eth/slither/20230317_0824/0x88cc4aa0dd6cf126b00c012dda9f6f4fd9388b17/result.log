Compilation warnings/errors on /sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol:
Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
    --> /sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol:3311:1:
     |
3311 | library MetaSwapUtils {
     | ^ (Relevant source part starts here and spans across multiple lines).


[93m
SwapUtils.getYD(uint256,uint8,uint256[],uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#2505-2540) performs a multiplication on the result of a division:
	-c = c.mul(d).div(xp[i].mul(numTokens)) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#2521)
	-c = c.mul(d).mul(AmplificationUtils.A_PRECISION).div(nA.mul(numTokens)) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#2527)
SwapUtils.getD(uint256[],uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#2550-2598) performs a multiplication on the result of a division:
	-dP = dP.mul(d).div(xp[j].mul(numTokens)) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#2571)
	-d = nA.mul(s).div(AmplificationUtils.A_PRECISION).add(dP.mul(numTokens)).mul(d).div(nA.sub(AmplificationUtils.A_PRECISION).mul(d).div(AmplificationUtils.A_PRECISION).add(numTokens.add(1).mul(dP))) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#2577-2588)
SwapUtils.getY(uint256,uint8,uint8,uint256,uint256[]) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#2671-2722) performs a multiplication on the result of a division:
	-c = c.mul(d).div(_x.mul(numTokens)) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#2703)
	-c = c.mul(d).mul(AmplificationUtils.A_PRECISION).div(nA.mul(numTokens)) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#2708)
MetaSwapUtils.swapUnderlying(SwapUtils.Swap,MetaSwapUtils.MetaSwap,uint8,uint8,uint256,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#3977-4150) performs a multiplication on the result of a division:
	-dyFee = v.dy.mul(self.swapFee).div(FEE_DENOMINATOR) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#4082)
	-dyAdminFee = dyFee.mul(self.adminFee).div(FEE_DENOMINATOR) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#4097-4098)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply[0m
[93m
MetaSwapUtils._calculateWithdrawOneTokenDY(SwapUtils.Swap,uint8,uint256,uint256,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#3510-3569) uses a dangerous strict equality:
	- tokenIndex == xp.length.sub(1) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#3563)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities[0m
[93m
SwapUtils.getYD(uint256,uint8,uint256[],uint256).s (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#2515) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables[0m
[93m
MetaSwapUtils.swapUnderlying(SwapUtils.Swap,MetaSwapUtils.MetaSwap,uint8,uint8,uint256,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#3977-4150) ignores return value by baseSwap.removeLiquidityOneToken(v.dy,tokenIndexTo - baseLPTokenIndex,0,block.timestamp) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#4113-4118)
MetaSwapUtils.swapUnderlying(SwapUtils.Swap,MetaSwapUtils.MetaSwap,uint8,uint8,uint256,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#3977-4150) ignores return value by baseSwap.swap(tokenIndexFrom - baseLPTokenIndex,tokenIndexTo - baseLPTokenIndex,v.dx,minDy,block.timestamp) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#4128-4134)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return[0m
[92m
LPToken.initialize(string,string).name (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#2004) shadows:
	- ERC20Upgradeable.name() (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1619-1621) (function)
LPToken.initialize(string,string).symbol (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#2004) shadows:
	- ERC20Upgradeable.symbol() (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1627-1629) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
[92m
SwapUtils.addLiquidity(SwapUtils.Swap,uint256[],uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#2969-3073) has external calls inside a loop: beforeBalance = pooledTokens[i].balanceOf(address(this)) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#3008-3009)
SwapUtils.addLiquidity(SwapUtils.Swap,uint256[],uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#2969-3073) has external calls inside a loop: amounts[i] = pooledTokens[i].balanceOf(address(this)).sub(beforeBalance) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#3017-3019)
SwapUtils.withdrawAdminFees(SwapUtils.Swap,address) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#3259-3269) has external calls inside a loop: balance = token.balanceOf(address(this)).sub(self.balances[i]) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#3263-3264)
MetaSwapUtils.addLiquidity(SwapUtils.Swap,MetaSwapUtils.MetaSwap,uint256[],uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#4162-4280) has external calls inside a loop: beforeBalance = pooledTokens[i].balanceOf(address(this)) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#4210-4211)
MetaSwapUtils.addLiquidity(SwapUtils.Swap,MetaSwapUtils.MetaSwap,uint256[],uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#4162-4280) has external calls inside a loop: amounts[i] = pooledTokens[i].balanceOf(address(this)).sub(beforeBalance) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#4219-4221)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop[0m
[92m
Reentrancy in SwapUtils.addLiquidity(SwapUtils.Swap,uint256[],uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#2969-3073):
	External calls:
	- v.lpToken.mint(msg.sender,toMint) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#3062)
	Event emitted after the call(s):
	- AddLiquidity(msg.sender,amounts,fees,v.d1,v.totalSupply.add(toMint)) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#3064-3070)
Reentrancy in MetaSwapUtils.addLiquidity(SwapUtils.Swap,MetaSwapUtils.MetaSwap,uint256[],uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#4162-4280):
	External calls:
	- self.lpToken.mint(msg.sender,toMint) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#4269)
	Event emitted after the call(s):
	- AddLiquidity(msg.sender,amounts,fees,v.d1,v.totalSupply.add(toMint)) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#4271-4277)
Reentrancy in SwapUtils.removeLiquidity(SwapUtils.Swap,uint256,uint256[]) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#3084-3114):
	External calls:
	- lpToken.burnFrom(msg.sender,amount) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#3109)
	Event emitted after the call(s):
	- RemoveLiquidity(msg.sender,amounts,totalSupply.sub(amount)) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#3111)
Reentrancy in SwapUtils.removeLiquidityImbalance(SwapUtils.Swap,uint256[],uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#3175-3252):
	External calls:
	- v.lpToken.burnFrom(msg.sender,tokenAmount) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#3237)
	Event emitted after the call(s):
	- RemoveLiquidityImbalance(msg.sender,amounts,fees,v.d1,v.totalSupply.sub(tokenAmount)) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#3243-3249)
Reentrancy in MetaSwapUtils.removeLiquidityImbalance(SwapUtils.Swap,MetaSwapUtils.MetaSwap,uint256[],uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#4348-4442):
	External calls:
	- v.lpToken.burnFrom(msg.sender,tokenAmount) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#4428)
	Event emitted after the call(s):
	- RemoveLiquidityImbalance(msg.sender,amounts,fees,v.d1,v.totalSupply.sub(tokenAmount)) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#4433-4439)
Reentrancy in SwapUtils.removeLiquidityOneToken(SwapUtils.Swap,uint256,uint8,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#3124-3163):
	External calls:
	- lpToken.burnFrom(msg.sender,tokenAmount) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#3151)
	- pooledTokens[tokenIndex].safeTransfer(msg.sender,dy) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#3152)
	Event emitted after the call(s):
	- RemoveLiquidityOne(msg.sender,tokenAmount,totalSupply,tokenIndex,dy) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#3154-3160)
Reentrancy in MetaSwapUtils.removeLiquidityOneToken(SwapUtils.Swap,MetaSwapUtils.MetaSwap,uint256,uint8,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#4291-4335):
	External calls:
	- lpToken.burnFrom(msg.sender,tokenAmount) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#4323)
	- self.pooledTokens[tokenIndex].safeTransfer(msg.sender,dy) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#4324)
	Event emitted after the call(s):
	- RemoveLiquidityOne(msg.sender,tokenAmount,totalSupply,tokenIndex,dy) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#4326-4332)
Reentrancy in SwapUtils.swap(SwapUtils.Swap,uint8,uint8,uint256,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#2910-2958):
	External calls:
	- tokenFrom.safeTransferFrom(msg.sender,address(this),dx) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#2925)
	- self.pooledTokens[tokenIndexTo].safeTransfer(msg.sender,dy) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#2953)
	Event emitted after the call(s):
	- TokenSwap(msg.sender,dx,dy,tokenIndexFrom,tokenIndexTo) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#2955)
Reentrancy in MetaSwapUtils.swap(SwapUtils.Swap,MetaSwapUtils.MetaSwap,uint8,uint8,uint256,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#3891-3961):
	External calls:
	- tokenFrom.safeTransferFrom(msg.sender,address(this),dx) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#3919)
	- self.pooledTokens[tokenIndexTo].safeTransfer(msg.sender,dy) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#3950)
	Event emitted after the call(s):
	- TokenSwap(msg.sender,transferredDx,dy,tokenIndexFrom,tokenIndexTo) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#3952-3958)
Reentrancy in MetaSwapUtils.swapUnderlying(SwapUtils.Swap,MetaSwapUtils.MetaSwap,uint8,uint8,uint256,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#3977-4150):
	External calls:
	- v.tokenFrom.safeTransferFrom(msg.sender,address(this),dx) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#4032)
	- v.dx = baseSwap.addLiquidity(baseAmounts,0,block.timestamp) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#4060)
	- baseSwap.removeLiquidityOneToken(v.dy,tokenIndexTo - baseLPTokenIndex,0,block.timestamp) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#4113-4118)
	- baseSwap.swap(tokenIndexFrom - baseLPTokenIndex,tokenIndexTo - baseLPTokenIndex,v.dx,minDy,block.timestamp) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#4128-4134)
	- v.tokenTo.safeTransfer(msg.sender,v.dy) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#4139)
	Event emitted after the call(s):
	- TokenSwapUnderlying(msg.sender,dx,v.dy,tokenIndexFrom,tokenIndexTo) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#4141-4147)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
[92m
AmplificationUtils._getAPrecise(SwapUtils.Swap) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#2145-2172) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp < t1 (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#2153)
AmplificationUtils.rampA(SwapUtils.Swap,uint256,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#2182-2226) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp >= self.initialATime.add(86400),Wait 1 day before starting ramp) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#2187-2190)
	- require(bool,string)(futureTime_ >= block.timestamp.add(MIN_RAMP_TIME),Insufficient ramp time) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#2191-2194)
	- futureAPrecise < initialAPrecise (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#2203)
	- require(bool,string)(futureAPrecise.mul(MAX_A_CHANGE) >= initialAPrecise,futureA_ is too small) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#2204-2207)
	- require(bool,string)(futureAPrecise <= initialAPrecise.mul(MAX_A_CHANGE),futureA_ is too large) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#2209-2212)
AmplificationUtils.stopRampA(SwapUtils.Swap) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#2233-2243) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(self.futureATime > block.timestamp,Ramp is already stopped) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#2234)
MetaSwapUtils._getBaseVirtualPrice(MetaSwapUtils.MetaSwap) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#3432-3444) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp > metaSwapStorage.baseCacheLastUpdated + BASE_CACHE_EXPIRE_TIME (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#3438-3439)
MetaSwapUtils.swapUnderlying(SwapUtils.Swap,MetaSwapUtils.MetaSwap,uint8,uint8,uint256,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#3977-4150) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(v.dy >= minDy,Swap didn't result in min tokens) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#4123)
MetaSwapUtils._updateBaseVirtualPrice(MetaSwapUtils.MetaSwap) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#4451-4468) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp > metaSwapStorage.baseCacheLastUpdated + BASE_CACHE_EXPIRE_TIME (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#4456-4457)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp[0m
[92m
AddressUpgradeable.isContract(address) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#245-254) uses assembly
	- INLINE ASM (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#252)
AddressUpgradeable._verifyCallResult(bool,bytes,string) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#366-383) uses assembly
	- INLINE ASM (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#375-378)
Address.isContract(address) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#984-993) uses assembly
	- INLINE ASM (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#991)
Address._verifyCallResult(bool,bytes,string) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1129-1146) uses assembly
	- INLINE ASM (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1138-1141)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
[92m
Address.functionCall(address,bytes) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1037-1039) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1062-1064) is never used and should be removed
Address.functionDelegateCall(address,bytes) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1111-1113) is never used and should be removed
Address.functionDelegateCall(address,bytes,string) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1121-1127) is never used and should be removed
Address.functionStaticCall(address,bytes) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1087-1089) is never used and should be removed
Address.functionStaticCall(address,bytes,string) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1097-1103) is never used and should be removed
Address.sendValue(address,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1011-1017) is never used and should be removed
AddressUpgradeable._verifyCallResult(bool,bytes,string) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#366-383) is never used and should be removed
AddressUpgradeable.functionCall(address,bytes) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#298-300) is never used and should be removed
AddressUpgradeable.functionCall(address,bytes,string) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#308-310) is never used and should be removed
AddressUpgradeable.functionCallWithValue(address,bytes,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#323-325) is never used and should be removed
AddressUpgradeable.functionCallWithValue(address,bytes,uint256,string) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#333-340) is never used and should be removed
AddressUpgradeable.functionStaticCall(address,bytes) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#348-350) is never used and should be removed
AddressUpgradeable.functionStaticCall(address,bytes,string) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#358-364) is never used and should be removed
AddressUpgradeable.sendValue(address,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#272-278) is never used and should be removed
Context._msgData() (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#555-558) is never used and should be removed
ContextUpgradeable.__Context_init() (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1242-1244) is never used and should be removed
ContextUpgradeable._msgData() (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1252-1255) is never used and should be removed
ERC20._burn(address,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#804-812) is never used and should be removed
ERC20._mint(address,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#783-791) is never used and should be removed
ERC20._setupDecimals(uint8) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#842-844) is never used and should be removed
ERC20BurnableUpgradeable.__ERC20Burnable_init() (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1872-1875) is never used and should be removed
ERC20BurnableUpgradeable.__ERC20Burnable_init_unchained() (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1877-1878) is never used and should be removed
ERC20Upgradeable.__ERC20_init(string,string) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1605-1608) is never used and should be removed
ERC20Upgradeable._setupDecimals(uint8) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1842-1844) is never used and should be removed
OwnableUpgradeable.__Ownable_init() (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1936-1939) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1178-1187) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1194-1197) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1189-1192) is never used and should be removed
SafeMath.div(uint256,uint256,string) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#190-193) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#152-155) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#210-213) is never used and should be removed
SafeMath.tryAdd(uint256,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#24-28) is never used and should be removed
SafeMath.tryDiv(uint256,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#60-63) is never used and should be removed
SafeMath.tryMod(uint256,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#70-73) is never used and should be removed
SafeMath.tryMul(uint256,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#45-53) is never used and should be removed
SafeMath.trySub(uint256,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#35-38) is never used and should be removed
SafeMathUpgradeable.div(uint256,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1476-1479) is never used and should be removed
SafeMathUpgradeable.div(uint256,uint256,string) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1531-1534) is never used and should be removed
SafeMathUpgradeable.mod(uint256,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1493-1496) is never used and should be removed
SafeMathUpgradeable.mod(uint256,uint256,string) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1551-1554) is never used and should be removed
SafeMathUpgradeable.mul(uint256,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1457-1462) is never used and should be removed
SafeMathUpgradeable.tryAdd(uint256,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1365-1369) is never used and should be removed
SafeMathUpgradeable.tryDiv(uint256,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1401-1404) is never used and should be removed
SafeMathUpgradeable.tryMod(uint256,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1411-1414) is never used and should be removed
SafeMathUpgradeable.tryMul(uint256,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1386-1394) is never used and should be removed
SafeMathUpgradeable.trySub(uint256,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1376-1379) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code[0m
[92m
Low level call in AddressUpgradeable.sendValue(address,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#272-278):
	- (success) = recipient.call{value: amount}() (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#276)
Low level call in AddressUpgradeable.functionCallWithValue(address,bytes,uint256,string) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#333-340):
	- (success,returndata) = target.call{value: value}(data) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#338)
Low level call in AddressUpgradeable.functionStaticCall(address,bytes,string) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#358-364):
	- (success,returndata) = target.staticcall(data) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#362)
Low level call in Address.sendValue(address,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1011-1017):
	- (success) = recipient.call{value: amount}() (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1015)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1072-1079):
	- (success,returndata) = target.call{value: value}(data) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1077)
Low level call in Address.functionStaticCall(address,bytes,string) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1097-1103):
	- (success,returndata) = target.staticcall(data) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1101)
Low level call in Address.functionDelegateCall(address,bytes,string) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1121-1127):
	- (success,returndata) = target.delegatecall(data) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1125)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
[92m
Function ContextUpgradeable.__Context_init() (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1242-1244) is not in mixedCase
Function ContextUpgradeable.__Context_init_unchained() (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1246-1247) is not in mixedCase
Variable ContextUpgradeable.__gap (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1256) is not in mixedCase
Function ERC20Upgradeable.__ERC20_init(string,string) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1605-1608) is not in mixedCase
Function ERC20Upgradeable.__ERC20_init_unchained(string,string) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1610-1614) is not in mixedCase
Variable ERC20Upgradeable.__gap (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1861) is not in mixedCase
Function ERC20BurnableUpgradeable.__ERC20Burnable_init() (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1872-1875) is not in mixedCase
Function ERC20BurnableUpgradeable.__ERC20Burnable_init_unchained() (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1877-1878) is not in mixedCase
Variable ERC20BurnableUpgradeable.__gap (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1907) is not in mixedCase
Function OwnableUpgradeable.__Ownable_init() (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1936-1939) is not in mixedCase
Function OwnableUpgradeable.__Ownable_init_unchained() (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1941-1945) is not in mixedCase
Variable OwnableUpgradeable.__gap (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1983) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
[92m
Redundant expression "this (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#556)" inContext (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#550-559)
Redundant expression "this (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1253)" inContextUpgradeable (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1241-1257)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements[0m
[92m
OwnableUpgradeable.__gap (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1983) is never used in LPToken (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1994-2039)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable[0m
[92m
name() should be declared external:
	- ERC20.name() (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#619-621)
symbol() should be declared external:
	- ERC20.symbol() (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#627-629)
decimals() should be declared external:
	- ERC20.decimals() (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#644-646)
totalSupply() should be declared external:
	- ERC20.totalSupply() (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#651-653)
balanceOf(address) should be declared external:
	- ERC20.balanceOf(address) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#658-660)
transfer(address,uint256) should be declared external:
	- ERC20.transfer(address,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#670-673)
allowance(address,address) should be declared external:
	- ERC20.allowance(address,address) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#678-680)
approve(address,uint256) should be declared external:
	- ERC20.approve(address,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#689-692)
transferFrom(address,address,uint256) should be declared external:
	- ERC20.transferFrom(address,address,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#707-711)
increaseAllowance(address,uint256) should be declared external:
	- ERC20.increaseAllowance(address,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#725-728)
decreaseAllowance(address,uint256) should be declared external:
	- ERC20.decreaseAllowance(address,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#744-747)
name() should be declared external:
	- ERC20Upgradeable.name() (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1619-1621)
symbol() should be declared external:
	- ERC20Upgradeable.symbol() (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1627-1629)
decimals() should be declared external:
	- ERC20Upgradeable.decimals() (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1644-1646)
totalSupply() should be declared external:
	- ERC20Upgradeable.totalSupply() (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1651-1653)
balanceOf(address) should be declared external:
	- ERC20Upgradeable.balanceOf(address) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1658-1660)
transfer(address,uint256) should be declared external:
	- ERC20Upgradeable.transfer(address,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1670-1673)
approve(address,uint256) should be declared external:
	- ERC20Upgradeable.approve(address,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1689-1692)
transferFrom(address,address,uint256) should be declared external:
	- ERC20Upgradeable.transferFrom(address,address,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1707-1711)
increaseAllowance(address,uint256) should be declared external:
	- ERC20Upgradeable.increaseAllowance(address,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1725-1728)
decreaseAllowance(address,uint256) should be declared external:
	- ERC20Upgradeable.decreaseAllowance(address,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1744-1747)
burn(uint256) should be declared external:
	- ERC20BurnableUpgradeable.burn(uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1886-1888)
burnFrom(address,uint256) should be declared external:
	- ERC20BurnableUpgradeable.burnFrom(address,uint256) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1901-1906)
renounceOwnership() should be declared external:
	- OwnableUpgradeable.renounceOwnership() (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1969-1972)
transferOwnership(address) should be declared external:
	- OwnableUpgradeable.transferOwnership(address) (../../sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol#1978-1982)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
/sb/0x88cc4aa0dd6cf126b00c012dda9f6f4fd9388b17.sol analyzed (21 contracts with 78 detectors), 129 result(s) found
