Compilation warnings/errors on /sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:181:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function PermissionGroups() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:334:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function KyberNetworkProxy(address _admin) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:7:5: Warning: Functions in interfaces should be declared external.
    function totalSupply() public view returns (uint supply);
    ^-------------------------------------------------------^
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:8:5: Warning: Functions in interfaces should be declared external.
    function balanceOf(address _owner) public view returns (uint balance);
    ^--------------------------------------------------------------------^
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:9:5: Warning: Functions in interfaces should be declared external.
    function transfer(address _to, uint _value) public returns (bool success);
    ^------------------------------------------------------------------------^
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:10:5: Warning: Functions in interfaces should be declared external.
    function transferFrom(address _from, address _to, uint _value) public returns (bool success);
    ^-------------------------------------------------------------------------------------------^
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:11:5: Warning: Functions in interfaces should be declared external.
    function approve(address _spender, uint _value) public returns (bool success);
    ^----------------------------------------------------------------------------^
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:12:5: Warning: Functions in interfaces should be declared external.
    function allowance(address _owner, address _spender) public view returns (uint remaining);
    ^----------------------------------------------------------------------------------------^
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:13:5: Warning: Functions in interfaces should be declared external.
    function decimals() public view returns(uint digits);
    ^---------------------------------------------------^
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:21:5: Warning: Functions in interfaces should be declared external.
    function maxGasPrice() public view returns(uint);
    ^-----------------------------------------------^
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:22:5: Warning: Functions in interfaces should be declared external.
    function getUserCapInWei(address user) public view returns(uint);
    ^---------------------------------------------------------------^
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:23:5: Warning: Functions in interfaces should be declared external.
    function getUserCapInTokenWei(address user, ERC20 token) public view returns(uint);
    ^---------------------------------------------------------------------------------^
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:24:5: Warning: Functions in interfaces should be declared external.
    function enabled() public view returns(bool);
    ^-------------------------------------------^
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:25:5: Warning: Functions in interfaces should be declared external.
    function info(bytes32 id) public view returns(uint);
    ^--------------------------------------------------^
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:27:5: Warning: Functions in interfaces should be declared external.
    function getExpectedRate(ERC20 src, ERC20 dest, uint srcQty) public view
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:30:5: Warning: Functions in interfaces should be declared external.
    function tradeWithHint(address trader, ERC20 src, uint srcAmount, ERC20 dest, address destAddress,
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:38:5: Warning: Functions in interfaces should be declared external.
    function maxGasPrice() public view returns(uint);
    ^-----------------------------------------------^
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:39:5: Warning: Functions in interfaces should be declared external.
    function getUserCapInWei(address user) public view returns(uint);
    ^---------------------------------------------------------------^
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:40:5: Warning: Functions in interfaces should be declared external.
    function getUserCapInTokenWei(address user, ERC20 token) public view returns(uint);
    ^---------------------------------------------------------------------------------^
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:41:5: Warning: Functions in interfaces should be declared external.
    function enabled() public view returns(bool);
    ^-------------------------------------------^
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:42:5: Warning: Functions in interfaces should be declared external.
    function info(bytes32 id) public view returns(uint);
    ^--------------------------------------------------^
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:44:5: Warning: Functions in interfaces should be declared external.
    function getExpectedRate(ERC20 src, ERC20 dest, uint srcQty) public view
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:47:5: Warning: Functions in interfaces should be declared external.
    function tradeWithHint(ERC20 src, uint srcAmount, ERC20 dest, address destAddress, uint maxDestAmount,
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:55:5: Warning: Functions in interfaces should be declared external.
    function swapTokenToToken(ERC20 src, uint srcAmount, ERC20 dest, uint minConversionRate) public returns(uint);
    ^------------------------------------------------------------------------------------------------------------^
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:56:5: Warning: Functions in interfaces should be declared external.
    function swapEtherToToken(ERC20 token, uint minConversionRate) public payable returns(uint);
    ^------------------------------------------------------------------------------------------^
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:57:5: Warning: Functions in interfaces should be declared external.
    function swapTokenToEther(ERC20 token, uint srcAmount, uint minConversionRate) public returns(uint);
    ^--------------------------------------------------------------------------------------------------^
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:216:9: Warning: Invoking events without "emit" prefix is deprecated.
        TransferAdminPending(pendingAdmin);
        ^--------------------------------^
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:226:9: Warning: Invoking events without "emit" prefix is deprecated.
        TransferAdminPending(newAdmin);
        ^----------------------------^
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:227:9: Warning: Invoking events without "emit" prefix is deprecated.
        AdminClaimed(newAdmin, admin);
        ^---------------------------^
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:238:9: Warning: Invoking events without "emit" prefix is deprecated.
        AdminClaimed(pendingAdmin, admin);
        ^-------------------------------^
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:249:9: Warning: Invoking events without "emit" prefix is deprecated.
        AlerterAdded(newAlerter, true);
        ^----------------------------^
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:262:17: Warning: Invoking events without "emit" prefix is deprecated.
                AlerterAdded(alerter, false);
                ^--------------------------^
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:274:9: Warning: Invoking events without "emit" prefix is deprecated.
        OperatorAdded(newOperator, true);
        ^------------------------------^
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:287:17: Warning: Invoking events without "emit" prefix is deprecated.
                OperatorAdded(operator, false);
                ^----------------------------^
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:312:9: Warning: Invoking events without "emit" prefix is deprecated.
        TokenWithdraw(token, amount, sendTo);
        ^----------------------------------^
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:322:9: Warning: Invoking events without "emit" prefix is deprecated.
        EtherWithdraw(amount, sendTo);
        ^---------------------------^
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:513:9: Warning: Invoking events without "emit" prefix is deprecated.
        ExecuteTrade(msg.sender, src, dest, tradeOutcome.userDeltaSrcAmount, tradeOutcome.userDeltaDestAmount);
        ^----------------------------------------------------------------------------------------------------^
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol:523:9: Warning: Invoking events without "emit" prefix is deprecated.
        KyberNetworkSet(_kyberNetworkContract, kyberNetworkContract);
        ^----------------------------------------------------------^

[93m
KyberNetworkProxy.tradeWithHint(ERC20,uint256,ERC20,address,uint256,uint256,address,bytes).userBalanceBefore (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#478) is a local variable never initialized
KyberNetworkProxy.swapTokenToEther(ERC20,uint256,uint256).hint (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#430) is a local variable never initialized
KyberNetworkProxy.swapTokenToToken(ERC20,uint256,ERC20,uint256).hint (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#391) is a local variable never initialized
KyberNetworkProxy.swapEtherToToken(ERC20,uint256).hint (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#410) is a local variable never initialized
KyberNetworkProxy.trade(ERC20,uint256,ERC20,address,uint256,uint256,address).hint (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#362) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables[0m
[92m
Withdrawable.withdrawEther(uint256,address).sendTo (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#320) lacks a zero-check on :
		- sendTo.transfer(amount) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#321)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation[0m
[92m
Reentrancy in KyberNetworkProxy.tradeWithHint(ERC20,uint256,ERC20,address,uint256,uint256,address,bytes) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#462-515):
	External calls:
	- userBalanceBefore.srcBalance = getBalance(src,msg.sender) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#480)
		- token.balanceOf(user) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#133)
	- userBalanceBefore.destBalance = getBalance(dest,destAddress) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#481)
		- token.balanceOf(user) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#133)
	- require(bool)(src.transferFrom(msg.sender,kyberNetworkContract,srcAmount)) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#486)
	- reportedDestAmount = kyberNetworkContract.tradeWithHint.value(msg.value)(msg.sender,src,srcAmount,dest,destAddress,maxDestAmount,minConversionRate,walletId,hint) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#489-499)
	- tradeOutcome = calculateTradeOutcome(userBalanceBefore.srcBalance,userBalanceBefore.destBalance,src,dest,destAddress) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#501-507)
		- decimals[token] = token.decimals() (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#75)
		- token.balanceOf(user) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#133)
	External calls sending eth:
	- reportedDestAmount = kyberNetworkContract.tradeWithHint.value(msg.value)(msg.sender,src,srcAmount,dest,destAddress,maxDestAmount,minConversionRate,walletId,hint) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#489-499)
	Event emitted after the call(s):
	- ExecuteTrade(msg.sender,src,dest,tradeOutcome.userDeltaSrcAmount,tradeOutcome.userDeltaDestAmount) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#513)
Reentrancy in Withdrawable.withdrawToken(ERC20,uint256,address) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#310-313):
	External calls:
	- require(bool)(token.transfer(sendTo,amount)) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#311)
	Event emitted after the call(s):
	- TokenWithdraw(token,amount,sendTo) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#312)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
[92m
Utils.calcDstQty(uint256,uint256,uint256,uint256) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#89-100) is never used and should be removed
Utils.calcSrcQty(uint256,uint256,uint256,uint256) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#102-119) is never used and should be removed
Utils.getDecimals(ERC20) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#78-87) is never used and should be removed
Utils2.calcDestAmount(ERC20,ERC20,uint256,uint256) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#145-147) is never used and should be removed
Utils2.calcSrcAmount(ERC20,ERC20,uint256,uint256) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#149-151) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code[0m
[92m
Pragma version^0.4.18 (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#1) allows old versions
solc-0.4.26 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
[92m
Parameter KyberNetworkProxy.setKyberNetworkContract(KyberNetworkInterface)._kyberNetworkContract (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#519) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
[92m
Reentrancy in Withdrawable.withdrawEther(uint256,address) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#320-323):
	External calls:
	- sendTo.transfer(amount) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#321)
	Event emitted after the call(s):
	- EtherWithdraw(amount,sendTo) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#322)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4[0m
[92m
totalSupply() should be declared external:
	- ERC20.totalSupply() (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#7)
balanceOf(address) should be declared external:
	- ERC20.balanceOf(address) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#8)
transfer(address,uint256) should be declared external:
	- ERC20.transfer(address,uint256) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#9)
transferFrom(address,address,uint256) should be declared external:
	- ERC20.transferFrom(address,address,uint256) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#10)
approve(address,uint256) should be declared external:
	- ERC20.approve(address,uint256) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#11)
allowance(address,address) should be declared external:
	- ERC20.allowance(address,address) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#12)
decimals() should be declared external:
	- ERC20.decimals() (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#13)
maxGasPrice() should be declared external:
	- KyberNetworkInterface.maxGasPrice() (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#21)
getUserCapInWei(address) should be declared external:
	- KyberNetworkInterface.getUserCapInWei(address) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#22)
getUserCapInTokenWei(address,ERC20) should be declared external:
	- KyberNetworkInterface.getUserCapInTokenWei(address,ERC20) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#23)
enabled() should be declared external:
	- KyberNetworkInterface.enabled() (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#24)
info(bytes32) should be declared external:
	- KyberNetworkInterface.info(bytes32) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#25)
getExpectedRate(ERC20,ERC20,uint256) should be declared external:
	- KyberNetworkInterface.getExpectedRate(ERC20,ERC20,uint256) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#27-28)
tradeWithHint(address,ERC20,uint256,ERC20,address,uint256,uint256,address,bytes) should be declared external:
	- KyberNetworkInterface.tradeWithHint(address,ERC20,uint256,ERC20,address,uint256,uint256,address,bytes) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#30-31)
maxGasPrice() should be declared external:
	- KyberNetworkProxy.maxGasPrice() (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#543-545)
	- KyberNetworkProxyInterface.maxGasPrice() (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#38)
getUserCapInWei(address) should be declared external:
	- KyberNetworkProxy.getUserCapInWei(address) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#535-537)
	- KyberNetworkProxyInterface.getUserCapInWei(address) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#39)
getUserCapInTokenWei(address,ERC20) should be declared external:
	- KyberNetworkProxy.getUserCapInTokenWei(address,ERC20) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#539-541)
	- KyberNetworkProxyInterface.getUserCapInTokenWei(address,ERC20) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#40)
enabled() should be declared external:
	- KyberNetworkProxy.enabled() (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#547-549)
	- KyberNetworkProxyInterface.enabled() (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#41)
info(bytes32) should be declared external:
	- KyberNetworkProxy.info(bytes32) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#551-553)
	- KyberNetworkProxyInterface.info(bytes32) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#42)
getExpectedRate(ERC20,ERC20,uint256) should be declared external:
	- KyberNetworkProxy.getExpectedRate(ERC20,ERC20,uint256) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#528-533)
	- KyberNetworkProxyInterface.getExpectedRate(ERC20,ERC20,uint256) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#44-45)
swapTokenToToken(ERC20,uint256,ERC20,uint256) should be declared external:
	- KyberNetworkProxy.swapTokenToToken(ERC20,uint256,ERC20,uint256) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#382-403)
	- SimpleNetworkInterface.swapTokenToToken(ERC20,uint256,ERC20,uint256) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#55)
swapEtherToToken(ERC20,uint256) should be declared external:
	- KyberNetworkProxy.swapEtherToToken(ERC20,uint256) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#409-422)
	- SimpleNetworkInterface.swapEtherToToken(ERC20,uint256) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#56)
swapTokenToEther(ERC20,uint256,uint256) should be declared external:
	- KyberNetworkProxy.swapTokenToEther(ERC20,uint256,uint256) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#429-442)
	- SimpleNetworkInterface.swapTokenToEther(ERC20,uint256,uint256) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#57)
transferAdmin(address) should be declared external:
	- PermissionGroups.transferAdmin(address) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#214-218)
transferAdminQuickly(address) should be declared external:
	- PermissionGroups.transferAdminQuickly(address) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#224-229)
claimAdmin() should be declared external:
	- PermissionGroups.claimAdmin() (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#236-241)
addAlerter(address) should be declared external:
	- PermissionGroups.addAlerter(address) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#245-252)
removeAlerter(address) should be declared external:
	- PermissionGroups.removeAlerter(address) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#254-266)
addOperator(address) should be declared external:
	- PermissionGroups.addOperator(address) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#270-277)
removeOperator(address) should be declared external:
	- PermissionGroups.removeOperator(address) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#279-291)
trade(ERC20,uint256,ERC20,address,uint256,uint256,address) should be declared external:
	- KyberNetworkProxy.trade(ERC20,uint256,ERC20,address,uint256,uint256,address) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#349-374)
setKyberNetworkContract(KyberNetworkInterface) should be declared external:
	- KyberNetworkProxy.setKyberNetworkContract(KyberNetworkInterface) (../../sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol#519-526)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
/sb/0x818e6fecd516ecc3849daf6845e3ec868087b755.sol analyzed (9 contracts with 78 detectors), 49 result(s) found
