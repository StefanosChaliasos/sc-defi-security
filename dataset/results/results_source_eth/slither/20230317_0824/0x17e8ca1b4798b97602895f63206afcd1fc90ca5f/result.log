Compilation warnings/errors on /sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol:
Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.
   --> /sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol:747:1:
    |
747 | contract Proxy is Storage, Config {
    | ^ (Relevant source part starts here and spans across multiple lines).
Note: The payable fallback function is defined here.
   --> /sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol:767:5:
    |
767 |     fallback() external payable {
    |     ^ (Relevant source part starts here and spans across multiple lines).


[91m
Proxy._postProcess() (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#1001-1024) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(amount_scope_0) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#1019)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
[93m
Proxy._execs(address[],bytes32[],bytes[]).localStack (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#832) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables[0m
[92m
Address.isContract(address) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#275-284) uses assembly
	- INLINE ASM (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#282)
Address._verifyCallResult(bool,bytes,string) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#396-413) uses assembly
	- INLINE ASM (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#405-408)
Proxy.constructor(address) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#756-761) uses assembly
	- INLINE ASM (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#758-760)
Proxy.fallback() (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#767-787) uses assembly
	- INLINE ASM (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#782-785)
Proxy._trim(bytes,bytes32,bytes32[256],uint256) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#875-904) uses assembly
	- INLINE ASM (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#889-902)
Proxy._parse(bytes32[256],bytes,uint256) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#912-935) uses assembly
	- INLINE ASM (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#921-934)
Proxy._exec(address,bytes) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#942-972) uses assembly
	- INLINE ASM (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#948-971)
Proxy._getRegistry() (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#1027-1032) uses assembly
	- INLINE ASM (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#1029-1031)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
[92m
Address.functionCall(address,bytes) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#328-330) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#353-355) is never used and should be removed
Address.functionStaticCall(address,bytes) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#378-380) is never used and should be removed
Address.functionStaticCall(address,bytes,string) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#388-394) is never used and should be removed
Address.sendValue(address,uint256) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#302-308) is never used and should be removed
LibCache.get(mapping(bytes32 => bytes32),bytes32) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#155-161) is never used and should be removed
LibCache.set(mapping(bytes32 => bytes32),bytes32,bytes32) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#117-123) is never used and should be removed
LibStack.get(bytes32[]) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#97-100) is never used and should be removed
LibStack.getSig(bytes32[]) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#92-95) is never used and should be removed
LibStack.set(bytes32[],bytes32) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#75-77) is never used and should be removed
SafeERC20.safeApprove(IERC20,address,uint256) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#692-701) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#708-711) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#703-706) is never used and should be removed
SafeERC20.safeTransferFrom(IERC20,address,address,uint256) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#681-683) is never used and should be removed
SafeMath.add(uint256,uint256) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#445-450) is never used and should be removed
SafeMath.div(uint256,uint256) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#519-521) is never used and should be removed
SafeMath.div(uint256,uint256,string) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#535-541) is never used and should be removed
SafeMath.mod(uint256,uint256) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#555-557) is never used and should be removed
SafeMath.mod(uint256,uint256,string) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#571-574) is never used and should be removed
SafeMath.mul(uint256,uint256) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#493-505) is never used and should be removed
SafeMath.sub(uint256,uint256) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#462-464) is never used and should be removed
SafeMath.sub(uint256,uint256,string) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#476-481) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code[0m
[92m
Low level call in Address.sendValue(address,uint256) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#302-308):
	- (success) = recipient.call{value: amount}() (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#306)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#363-370):
	- (success,returndata) = target.call{value: value}(data) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#368)
Low level call in Address.functionStaticCall(address,bytes,string) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#388-394):
	- (success,returndata) = target.staticcall(data) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#392)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
[92m
Parameter LibStack.setAddress(bytes32[],address)._stack (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#71) is not in mixedCase
Parameter LibStack.setAddress(bytes32[],address)._input (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#71) is not in mixedCase
Parameter LibStack.set(bytes32[],bytes32)._stack (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#75) is not in mixedCase
Parameter LibStack.set(bytes32[],bytes32)._input (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#75) is not in mixedCase
Parameter LibStack.setHandlerType(bytes32[],uint256)._stack (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#79) is not in mixedCase
Parameter LibStack.setHandlerType(bytes32[],uint256)._input (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#79) is not in mixedCase
Parameter LibStack.getAddress(bytes32[])._stack (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#84) is not in mixedCase
Parameter LibStack.getSig(bytes32[])._stack (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#92) is not in mixedCase
Parameter LibStack.get(bytes32[])._stack (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#97) is not in mixedCase
Parameter LibStack.peek(bytes32[])._stack (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#102) is not in mixedCase
Parameter LibCache.set(mapping(bytes32 => bytes32),bytes32,bytes32)._cache (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#118) is not in mixedCase
Parameter LibCache.set(mapping(bytes32 => bytes32),bytes32,bytes32)._key (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#119) is not in mixedCase
Parameter LibCache.set(mapping(bytes32 => bytes32),bytes32,bytes32)._value (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#120) is not in mixedCase
Parameter LibCache.setAddress(mapping(bytes32 => bytes32),bytes32,address)._cache (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#126) is not in mixedCase
Parameter LibCache.setAddress(mapping(bytes32 => bytes32),bytes32,address)._key (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#127) is not in mixedCase
Parameter LibCache.setAddress(mapping(bytes32 => bytes32),bytes32,address)._value (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#128) is not in mixedCase
Parameter LibCache.setUint256(mapping(bytes32 => bytes32),bytes32,uint256)._cache (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#134) is not in mixedCase
Parameter LibCache.setUint256(mapping(bytes32 => bytes32),bytes32,uint256)._key (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#135) is not in mixedCase
Parameter LibCache.setUint256(mapping(bytes32 => bytes32),bytes32,uint256)._value (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#136) is not in mixedCase
Parameter LibCache.getAddress(mapping(bytes32 => bytes32),bytes32)._cache (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#142) is not in mixedCase
Parameter LibCache.getAddress(mapping(bytes32 => bytes32),bytes32)._key (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#143) is not in mixedCase
Parameter LibCache.getUint256(mapping(bytes32 => bytes32),bytes32)._cache (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#149) is not in mixedCase
Parameter LibCache.getUint256(mapping(bytes32 => bytes32),bytes32)._key (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#150) is not in mixedCase
Parameter LibCache.get(mapping(bytes32 => bytes32),bytes32)._cache (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#155) is not in mixedCase
Parameter LibCache.get(mapping(bytes32 => bytes32),bytes32)._key (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#155) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
[92m
LibParam.slitherConstructorConstantVariables() (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#5-64) uses literals with too many digits:
	- STATIC_MASK = 0x0100000000000000000000000000000000000000000000000000000000000000 (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#6-7)
LibParam.slitherConstructorConstantVariables() (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#5-64) uses literals with too many digits:
	- PARAMS_MASK = 0x0000000000000000000000000000000000000000000000000000000000000001 (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#8-9)
LibParam.slitherConstructorConstantVariables() (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#5-64) uses literals with too many digits:
	- REFS_MASK = 0x00000000000000000000000000000000000000000000000000000000000000FF (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#10-11)
LibParam.slitherConstructorConstantVariables() (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#5-64) uses literals with too many digits:
	- RETURN_NUM_MASK = 0x00FF000000000000000000000000000000000000000000000000000000000000 (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#12-13)
Proxy._setPostProcess(address) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#978-992) uses literals with too many digits:
	- bytes4(stack.peek()) != 0x00000000 (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#989)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits[0m
[92m
batchExec(address[],bytes32[],bytes[]) should be declared external:
	- Proxy.batchExec(address[],bytes32[],bytes[]) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#796-804)
execs(address[],bytes32[],bytes[]) should be declared external:
	- Proxy.execs(address[],bytes32[],bytes[]) (../../sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol#811-819)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
/sb/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol analyzed (11 contracts with 78 detectors), 67 result(s) found
