[93m
EIP20NonStandardInterface (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1122-1184) has incorrect ERC20 function interface:EIP20NonStandardInterface.transfer(address,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1148)
EIP20NonStandardInterface (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1122-1184) has incorrect ERC20 function interface:EIP20NonStandardInterface.transferFrom(address,address,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1162)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface[0m
[93m
CToken.accrueInterest() (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1561-1639) uses a dangerous strict equality:
	- accrualBlockNumberPrior == currentBlockNumber (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1567)
CToken.accrueInterest() (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1561-1639) uses a dangerous strict equality:
	- require(bool,string)(mathErr == MathError.NO_ERROR,could not calculate block delta) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1583)
CToken.balanceOfUnderlying(address) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1367-1372) uses a dangerous strict equality:
	- require(bool,string)(mErr == MathError.NO_ERROR,balance could not be calculated) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1370)
CToken.borrowBalanceStored(address) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1448-1452) uses a dangerous strict equality:
	- require(bool,string)(err == MathError.NO_ERROR,borrowBalanceStored: borrowBalanceStoredInternal failed) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1450)
CarefulMath.divUInt(uint256,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#659-665) uses a dangerous strict equality:
	- b == 0 (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#660)
CEther.doTransferIn(address,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2739-2744) uses a dangerous strict equality:
	- require(bool,string)(msg.value == amount,value mismatch) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2742)
CToken.exchangeRateStored() (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1505-1509) uses a dangerous strict equality:
	- require(bool,string)(err == MathError.NO_ERROR,exchangeRateStored: exchangeRateStoredInternal failed) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1507)
CToken.exchangeRateStoredInternal() (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1516-1546) uses a dangerous strict equality:
	- _totalSupply == 0 (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1518)
CEther.getCashPrior() (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2727-2731) uses a dangerous strict equality:
	- require(bool)(err == MathError.NO_ERROR) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2729)
CToken.initialize(ComptrollerInterface,InterestRateModel,uint256,string,string,uint8) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1203-1234) uses a dangerous strict equality:
	- require(bool,string)(accrualBlockNumber == 0 && borrowIndex == 0,market may only be initialized once) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1210)
CToken.initialize(ComptrollerInterface,InterestRateModel,uint256,string,string,uint8) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1203-1234) uses a dangerous strict equality:
	- require(bool,string)(err == uint256(Error.NO_ERROR),setting comptroller failed) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1218)
CToken.initialize(ComptrollerInterface,InterestRateModel,uint256,string,string,uint8) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1203-1234) uses a dangerous strict equality:
	- require(bool,string)(err == uint256(Error.NO_ERROR),setting interest rate model failed) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1226)
CToken.liquidateBorrowFresh(address,address,uint256,CTokenInterface) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2129-2197) uses a dangerous strict equality:
	- require(bool,string)(amountSeizeError == uint256(Error.NO_ERROR),LIQUIDATE_COMPTROLLER_CALCULATE_AMOUNT_SEIZE_FAILED) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2174)
CToken.liquidateBorrowFresh(address,address,uint256,CTokenInterface) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2129-2197) uses a dangerous strict equality:
	- require(bool,string)(seizeError == uint256(Error.NO_ERROR),token seizure failed) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2188)
CToken.mintFresh(address,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1674-1738) uses a dangerous strict equality:
	- require(bool,string)(vars.mathErr == MathError.NO_ERROR,MINT_EXCHANGE_CALCULATION_FAILED) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1713)
CToken.mintFresh(address,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1674-1738) uses a dangerous strict equality:
	- require(bool,string)(vars.mathErr == MathError.NO_ERROR,MINT_NEW_TOTAL_SUPPLY_CALCULATION_FAILED) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1721)
CToken.mintFresh(address,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1674-1738) uses a dangerous strict equality:
	- require(bool,string)(vars.mathErr == MathError.NO_ERROR,MINT_NEW_ACCOUNT_BALANCE_CALCULATION_FAILED) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1724)
Exponential.mulExp(Exponential.Exp,Exponential.Exp) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#846-866) uses a dangerous strict equality:
	- assert(bool)(err2 == MathError.NO_ERROR) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#863)
CarefulMath.mulUInt(uint256,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#642-654) uses a dangerous strict equality:
	- a == 0 (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#643)
CToken.repayBorrowFresh(address,address,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2027-2093) uses a dangerous strict equality:
	- require(bool,string)(vars.mathErr == MathError.NO_ERROR,REPAY_BORROW_NEW_ACCOUNT_BORROW_BALANCE_CALCULATION_FAILED) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2076)
CToken.repayBorrowFresh(address,address,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2027-2093) uses a dangerous strict equality:
	- require(bool,string)(vars.mathErr == MathError.NO_ERROR,REPAY_BORROW_NEW_TOTAL_BALANCE_CALCULATION_FAILED) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2079)
CEther.requireNoError(uint256,string) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2751-2770) uses a dangerous strict equality:
	- errCode == uint256(Error.NO_ERROR) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2752)
CEther.requireNoError(uint256,string) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2751-2770) uses a dangerous strict equality:
	- require(bool,string)(errCode == uint256(Error.NO_ERROR),string(fullMessage)) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2769)
CToken.transfer(address,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1312-1314) uses a dangerous strict equality:
	- transferTokens(msg.sender,msg.sender,dst,amount) == uint256(Error.NO_ERROR) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1313)
CToken.transferFrom(address,address,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1323-1325) uses a dangerous strict equality:
	- transferTokens(msg.sender,src,dst,amount) == uint256(Error.NO_ERROR) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1324)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities[0m
[93m
Reentrancy in CToken.liquidateBorrowInternal(address,uint256,CTokenInterface) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2103-2118):
	External calls:
	- error = cTokenCollateral.accrueInterest() (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2110)
	- liquidateBorrowFresh(msg.sender,borrower,repayAmount,cTokenCollateral) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2117)
		- allowed = comptroller.liquidateBorrowAllowed(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2131)
		- allowed = comptroller.seizeAllowed(address(this),seizerToken,liquidator,borrower,seizeTokens) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2224)
		- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2029)
		- comptroller.seizeVerify(address(this),seizerToken,liquidator,borrower,seizeTokens) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2265)
		- comptroller.repayBorrowVerify(address(this),payer,borrower,vars.actualRepayAmount,vars.borrowerIndex) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2090)
		- seizeError = cTokenCollateral.seize(liquidator,borrower,seizeTokens) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2184)
		- comptroller.liquidateBorrowVerify(address(this),address(cTokenCollateral),liquidator,borrower,actualRepayAmount,seizeTokens) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2194)
	State variables written after the call(s):
	- liquidateBorrowFresh(msg.sender,borrower,repayAmount,cTokenCollateral) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2117)
		- totalBorrows = vars.totalBorrowsNew (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2084)
Reentrancy in CToken.redeemFresh(address,uint256,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1790-1884):
	External calls:
	- allowed = comptroller.redeemAllowed(address(this),redeemer,vars.redeemTokens) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1830)
	State variables written after the call(s):
	- totalSupply = vars.totalSupplyNew (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1873)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m
[93m
CToken._addReservesFresh(uint256).actualAddAmount (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2418) is a local variable never initialized
CToken.repayBorrowFresh(address,address,uint256).vars (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2039) is a local variable never initialized
CToken.redeemFresh(address,uint256,uint256).vars (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1793) is a local variable never initialized
CToken.borrowFresh(address,uint256).vars (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1930) is a local variable never initialized
CToken.mintFresh(address,uint256).vars (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1686) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables[0m
[92m
Exponential.divScalarByExpTruncate(uint256,Exponential.Exp).fraction (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#835) shadows:
	- Exponential.fraction(uint256,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1047-1049) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
[92m
CToken._setPendingAdmin(address).newPendingAdmin (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2279) lacks a zero-check on :
		- pendingAdmin = newPendingAdmin (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2289)
CEther.constructor(ComptrollerInterface,InterestRateModel,uint256,string,string,uint8,address).admin_ (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2630) lacks a zero-check on :
		- admin = admin_ (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2637)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation[0m
[92m
Reentrancy in CToken.borrowFresh(address,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1913-1976):
	External calls:
	- allowed = comptroller.borrowAllowed(address(this),borrower,borrowAmount) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1915)
	State variables written after the call(s):
	- accountBorrows[borrower].principal = vars.accountBorrowsNew (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1965)
	- accountBorrows[borrower].interestIndex = borrowIndex (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1966)
	- totalBorrows = vars.totalBorrowsNew (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1967)
Reentrancy in CToken.mintFresh(address,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1674-1738):
	External calls:
	- allowed = comptroller.mintAllowed(address(this),minter,mintAmount) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1676)
	State variables written after the call(s):
	- accountTokens[minter] = vars.accountTokensNew (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1728)
	- totalSupply = vars.totalSupplyNew (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1727)
Reentrancy in CToken.redeemFresh(address,uint256,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1790-1884):
	External calls:
	- allowed = comptroller.redeemAllowed(address(this),redeemer,vars.redeemTokens) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1830)
	State variables written after the call(s):
	- accountTokens[redeemer] = vars.accountTokensNew (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1874)
Reentrancy in CToken.repayBorrowFresh(address,address,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2027-2093):
	External calls:
	- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2029)
	State variables written after the call(s):
	- accountBorrows[borrower].principal = vars.accountBorrowsNew (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2082)
	- accountBorrows[borrower].interestIndex = borrowIndex (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2083)
	- totalBorrows = vars.totalBorrowsNew (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2084)
Reentrancy in CToken.seizeInternal(address,address,address,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2222-2268):
	External calls:
	- allowed = comptroller.seizeAllowed(address(this),seizerToken,liquidator,borrower,seizeTokens) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2224)
	State variables written after the call(s):
	- accountTokens[borrower] = borrowerTokensNew (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2258)
	- accountTokens[liquidator] = liquidatorTokensNew (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2259)
Reentrancy in CToken.transferTokens(address,address,address,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1245-1304):
	External calls:
	- allowed = comptroller.transferAllowed(address(this),src,dst,tokens) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1247)
	State variables written after the call(s):
	- accountTokens[src] = srcTokensNew (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1290)
	- accountTokens[dst] = dstTokensNew (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1291)
	- transferAllowances[src][spender] = allowanceNew (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1295)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
[92m
Reentrancy in CToken.borrowFresh(address,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1913-1976):
	External calls:
	- allowed = comptroller.borrowAllowed(address(this),borrower,borrowAmount) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1915)
	Event emitted after the call(s):
	- Borrow(borrower,borrowAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1970)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#612)
		- failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.BORROW_COMPTROLLER_REJECTION,allowed) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1917)
	- Failure(uint256(err),uint256(info),0) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#603)
		- fail(Error.MARKET_NOT_FRESH,FailureInfo.BORROW_FRESHNESS_CHECK) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1922)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#612)
		- failOpaque(Error.MATH_ERROR,FailureInfo.BORROW_NEW_ACCOUNT_BORROW_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1944)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#612)
		- failOpaque(Error.MATH_ERROR,FailureInfo.BORROW_NEW_TOTAL_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1949)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#612)
		- failOpaque(Error.MATH_ERROR,FailureInfo.BORROW_ACCUMULATED_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1939)
	- Failure(uint256(err),uint256(info),0) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#603)
		- fail(Error.TOKEN_INSUFFICIENT_CASH,FailureInfo.BORROW_CASH_NOT_AVAILABLE) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1927)
Reentrancy in CToken.liquidateBorrowFresh(address,address,uint256,CTokenInterface) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2129-2197):
	External calls:
	- allowed = comptroller.liquidateBorrowAllowed(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2131)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#603)
		- (fail(Error.INVALID_CLOSE_AMOUNT_REQUESTED,FailureInfo.LIQUIDATE_CLOSE_AMOUNT_IS_UINT_MAX),0) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2158)
	- Failure(uint256(err),uint256(info),0) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#603)
		- (fail(Error.INVALID_ACCOUNT_PAIR,FailureInfo.LIQUIDATE_LIQUIDATOR_IS_BORROWER),0) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2148)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#612)
		- (failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.LIQUIDATE_COMPTROLLER_REJECTION,allowed),0) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2133)
	- Failure(uint256(err),uint256(info),0) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#603)
		- (fail(Error.MARKET_NOT_FRESH,FailureInfo.LIQUIDATE_COLLATERAL_FRESHNESS_CHECK),0) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2143)
	- Failure(uint256(err),uint256(info),0) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#603)
		- (fail(Error.MARKET_NOT_FRESH,FailureInfo.LIQUIDATE_FRESHNESS_CHECK),0) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2138)
	- Failure(uint256(err),uint256(info),0) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#603)
		- (fail(Error.INVALID_CLOSE_AMOUNT_REQUESTED,FailureInfo.LIQUIDATE_CLOSE_AMOUNT_IS_ZERO),0) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2153)
Reentrancy in CToken.liquidateBorrowFresh(address,address,uint256,CTokenInterface) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2129-2197):
	External calls:
	- allowed = comptroller.liquidateBorrowAllowed(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2131)
	- (repayBorrowError,actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2163)
		- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2029)
		- comptroller.repayBorrowVerify(address(this),payer,borrower,vars.actualRepayAmount,vars.borrowerIndex) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2090)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#603)
		- (fail(TokenErrorReporter.Error(repayBorrowError),FailureInfo.LIQUIDATE_REPAY_BORROW_FRESH_FAILED),0) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2165)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#612)
		- (repayBorrowError,actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2163)
	- Failure(uint256(err),uint256(info),0) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#603)
		- (repayBorrowError,actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2163)
	- RepayBorrow(payer,borrower,vars.actualRepayAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2087)
		- (repayBorrowError,actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2163)
Reentrancy in CToken.liquidateBorrowFresh(address,address,uint256,CTokenInterface) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2129-2197):
	External calls:
	- allowed = comptroller.liquidateBorrowAllowed(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2131)
	- (repayBorrowError,actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2163)
		- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2029)
		- comptroller.repayBorrowVerify(address(this),payer,borrower,vars.actualRepayAmount,vars.borrowerIndex) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2090)
	- seizeError = seizeInternal(address(this),liquidator,borrower,seizeTokens) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2182)
		- allowed = comptroller.seizeAllowed(address(this),seizerToken,liquidator,borrower,seizeTokens) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2224)
		- comptroller.seizeVerify(address(this),seizerToken,liquidator,borrower,seizeTokens) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2265)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#603)
		- seizeError = seizeInternal(address(this),liquidator,borrower,seizeTokens) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2182)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#612)
		- seizeError = seizeInternal(address(this),liquidator,borrower,seizeTokens) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2182)
	- Transfer(borrower,liquidator,seizeTokens) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2262)
		- seizeError = seizeInternal(address(this),liquidator,borrower,seizeTokens) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2182)
Reentrancy in CToken.liquidateBorrowFresh(address,address,uint256,CTokenInterface) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2129-2197):
	External calls:
	- allowed = comptroller.liquidateBorrowAllowed(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2131)
	- (repayBorrowError,actualRepayAmount) = repayBorrowFresh(liquidator,borrower,repayAmount) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2163)
		- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2029)
		- comptroller.repayBorrowVerify(address(this),payer,borrower,vars.actualRepayAmount,vars.borrowerIndex) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2090)
	- seizeError = seizeInternal(address(this),liquidator,borrower,seizeTokens) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2182)
		- allowed = comptroller.seizeAllowed(address(this),seizerToken,liquidator,borrower,seizeTokens) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2224)
		- comptroller.seizeVerify(address(this),seizerToken,liquidator,borrower,seizeTokens) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2265)
	- seizeError = cTokenCollateral.seize(liquidator,borrower,seizeTokens) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2184)
	Event emitted after the call(s):
	- LiquidateBorrow(liquidator,borrower,actualRepayAmount,address(cTokenCollateral),seizeTokens) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2191)
Reentrancy in CToken.liquidateBorrowInternal(address,uint256,CTokenInterface) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2103-2118):
	External calls:
	- error = cTokenCollateral.accrueInterest() (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2110)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#603)
		- (fail(TokenErrorReporter.Error(error),FailureInfo.LIQUIDATE_ACCRUE_COLLATERAL_INTEREST_FAILED),0) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2113)
Reentrancy in CToken.liquidateBorrowInternal(address,uint256,CTokenInterface) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2103-2118):
	External calls:
	- error = cTokenCollateral.accrueInterest() (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2110)
	- liquidateBorrowFresh(msg.sender,borrower,repayAmount,cTokenCollateral) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2117)
		- allowed = comptroller.liquidateBorrowAllowed(address(this),address(cTokenCollateral),liquidator,borrower,repayAmount) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2131)
		- allowed = comptroller.seizeAllowed(address(this),seizerToken,liquidator,borrower,seizeTokens) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2224)
		- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2029)
		- comptroller.seizeVerify(address(this),seizerToken,liquidator,borrower,seizeTokens) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2265)
		- comptroller.repayBorrowVerify(address(this),payer,borrower,vars.actualRepayAmount,vars.borrowerIndex) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2090)
		- seizeError = cTokenCollateral.seize(liquidator,borrower,seizeTokens) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2184)
		- comptroller.liquidateBorrowVerify(address(this),address(cTokenCollateral),liquidator,borrower,actualRepayAmount,seizeTokens) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2194)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#612)
		- liquidateBorrowFresh(msg.sender,borrower,repayAmount,cTokenCollateral) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2117)
	- Failure(uint256(err),uint256(info),0) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#603)
		- liquidateBorrowFresh(msg.sender,borrower,repayAmount,cTokenCollateral) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2117)
	- LiquidateBorrow(liquidator,borrower,actualRepayAmount,address(cTokenCollateral),seizeTokens) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2191)
		- liquidateBorrowFresh(msg.sender,borrower,repayAmount,cTokenCollateral) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2117)
	- RepayBorrow(payer,borrower,vars.actualRepayAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2087)
		- liquidateBorrowFresh(msg.sender,borrower,repayAmount,cTokenCollateral) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2117)
	- Transfer(borrower,liquidator,seizeTokens) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2262)
		- liquidateBorrowFresh(msg.sender,borrower,repayAmount,cTokenCollateral) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2117)
Reentrancy in CToken.mintFresh(address,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1674-1738):
	External calls:
	- allowed = comptroller.mintAllowed(address(this),minter,mintAmount) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1676)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#612)
		- (failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.MINT_COMPTROLLER_REJECTION,allowed),0) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1678)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#612)
		- (failOpaque(Error.MATH_ERROR,FailureInfo.MINT_EXCHANGE_RATE_READ_FAILED,uint256(vars.mathErr)),0) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1690)
	- Failure(uint256(err),uint256(info),0) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#603)
		- (fail(Error.MARKET_NOT_FRESH,FailureInfo.MINT_FRESHNESS_CHECK),0) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1683)
	- Mint(minter,vars.actualMintAmount,vars.mintTokens) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1731)
	- Transfer(address(this),minter,vars.mintTokens) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1732)
Reentrancy in CToken.redeemFresh(address,uint256,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1790-1884):
	External calls:
	- allowed = comptroller.redeemAllowed(address(this),redeemer,vars.redeemTokens) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1830)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#612)
		- failOpaque(Error.MATH_ERROR,FailureInfo.REDEEM_NEW_ACCOUNT_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1852)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#612)
		- failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.REDEEM_COMPTROLLER_REJECTION,allowed) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1832)
	- Failure(uint256(err),uint256(info),0) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#603)
		- fail(Error.MARKET_NOT_FRESH,FailureInfo.REDEEM_FRESHNESS_CHECK) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1837)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#612)
		- failOpaque(Error.MATH_ERROR,FailureInfo.REDEEM_NEW_TOTAL_SUPPLY_CALCULATION_FAILED,uint256(vars.mathErr)) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1847)
	- Failure(uint256(err),uint256(info),0) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#603)
		- fail(Error.TOKEN_INSUFFICIENT_CASH,FailureInfo.REDEEM_TRANSFER_OUT_NOT_POSSIBLE) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1857)
	- Redeem(redeemer,vars.redeemAmount,vars.redeemTokens) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1878)
	- Transfer(redeemer,address(this),vars.redeemTokens) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1877)
Reentrancy in CToken.repayBorrowFresh(address,address,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2027-2093):
	External calls:
	- allowed = comptroller.repayBorrowAllowed(address(this),payer,borrower,repayAmount) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2029)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#603)
		- (fail(Error.MARKET_NOT_FRESH,FailureInfo.REPAY_BORROW_FRESHNESS_CHECK),0) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2036)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#612)
		- (failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.REPAY_BORROW_COMPTROLLER_REJECTION,allowed),0) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2031)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#612)
		- (failOpaque(Error.MATH_ERROR,FailureInfo.REPAY_BORROW_ACCUMULATED_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)),0) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2047)
	- RepayBorrow(payer,borrower,vars.actualRepayAmount,vars.accountBorrowsNew,vars.totalBorrowsNew) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2087)
Reentrancy in CToken.seizeInternal(address,address,address,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2222-2268):
	External calls:
	- allowed = comptroller.seizeAllowed(address(this),seizerToken,liquidator,borrower,seizeTokens) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2224)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#612)
		- failOpaque(Error.MATH_ERROR,FailureInfo.LIQUIDATE_SEIZE_BALANCE_DECREMENT_FAILED,uint256(mathErr)) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2245)
	- Failure(uint256(err),uint256(info),0) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#603)
		- fail(Error.INVALID_ACCOUNT_PAIR,FailureInfo.LIQUIDATE_SEIZE_LIQUIDATOR_IS_BORROWER) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2231)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#612)
		- failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.LIQUIDATE_SEIZE_COMPTROLLER_REJECTION,allowed) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2226)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#612)
		- failOpaque(Error.MATH_ERROR,FailureInfo.LIQUIDATE_SEIZE_BALANCE_INCREMENT_FAILED,uint256(mathErr)) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2250)
	- Transfer(borrower,liquidator,seizeTokens) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2262)
Reentrancy in CToken.transferTokens(address,address,address,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1245-1304):
	External calls:
	- allowed = comptroller.transferAllowed(address(this),src,dst,tokens) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1247)
	Event emitted after the call(s):
	- Failure(uint256(err),uint256(info),0) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#603)
		- fail(Error.MATH_ERROR,FailureInfo.TRANSFER_TOO_MUCH) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1283)
	- Failure(uint256(err),uint256(info),0) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#603)
		- fail(Error.MATH_ERROR,FailureInfo.TRANSFER_NOT_ALLOWED) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1273)
	- Failure(uint256(err),uint256(info),0) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#603)
		- fail(Error.BAD_INPUT,FailureInfo.TRANSFER_NOT_ALLOWED) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1254)
	- Failure(uint256(err),uint256(info),opaqueError) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#612)
		- failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.TRANSFER_COMPTROLLER_REJECTION,allowed) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1249)
	- Failure(uint256(err),uint256(info),0) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#603)
		- fail(Error.MATH_ERROR,FailureInfo.TRANSFER_NOT_ENOUGH) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1278)
	- Transfer(src,dst,tokens) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1299)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
[92m
CToken._addReservesFresh(uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2415-2452) is never used and should be removed
CToken._addReservesInternal(uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2397-2407) is never used and should be removed
ComptrollerErrorReporter.fail(ComptrollerErrorReporter.Error,ComptrollerErrorReporter.FailureInfo) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#466-470) is never used and should be removed
ComptrollerErrorReporter.failOpaque(ComptrollerErrorReporter.Error,ComptrollerErrorReporter.FailureInfo,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#475-479) is never used and should be removed
Exponential.addExp(Exponential.Exp,Exponential.Exp) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#748-752) is never used and should be removed
Exponential.add_(Exponential.Double,Exponential.Double) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#946-948) is never used and should be removed
Exponential.add_(Exponential.Exp,Exponential.Exp) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#942-944) is never used and should be removed
Exponential.add_(uint256,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#950-952) is never used and should be removed
Exponential.add_(uint256,uint256,string) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#954-958) is never used and should be removed
Exponential.divExp(Exponential.Exp,Exponential.Exp) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#891-893) is never used and should be removed
Exponential.divScalar(Exponential.Exp,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#802-809) is never used and should be removed
Exponential.div_(Exponential.Double,Exponential.Double) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1026-1028) is never used and should be removed
Exponential.div_(Exponential.Double,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1030-1032) is never used and should be removed
Exponential.div_(Exponential.Exp,Exponential.Exp) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1014-1016) is never used and should be removed
Exponential.div_(Exponential.Exp,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1018-1020) is never used and should be removed
Exponential.div_(uint256,Exponential.Double) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1034-1036) is never used and should be removed
Exponential.div_(uint256,Exponential.Exp) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1022-1024) is never used and should be removed
Exponential.div_(uint256,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1038-1040) is never used and should be removed
Exponential.div_(uint256,uint256,string) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1042-1045) is never used and should be removed
Exponential.fraction(uint256,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1047-1049) is never used and should be removed
Exponential.greaterThanExp(Exponential.Exp,Exponential.Exp) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#921-923) is never used and should be removed
Exponential.isZeroExp(Exponential.Exp) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#928-930) is never used and should be removed
Exponential.lessThanExp(Exponential.Exp,Exponential.Exp) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#907-909) is never used and should be removed
Exponential.lessThanOrEqualExp(Exponential.Exp,Exponential.Exp) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#914-916) is never used and should be removed
Exponential.mulExp(Exponential.Exp,Exponential.Exp) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#846-866) is never used and should be removed
Exponential.mulExp(uint256,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#871-873) is never used and should be removed
Exponential.mulExp3(Exponential.Exp,Exponential.Exp,Exponential.Exp) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#878-884) is never used and should be removed
Exponential.mul_(Exponential.Double,Exponential.Double) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#989-991) is never used and should be removed
Exponential.mul_(Exponential.Double,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#993-995) is never used and should be removed
Exponential.mul_(Exponential.Exp,Exponential.Exp) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#977-979) is never used and should be removed
Exponential.mul_(Exponential.Exp,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#981-983) is never used and should be removed
Exponential.mul_(uint256,Exponential.Double) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#997-999) is never used and should be removed
Exponential.mul_(uint256,Exponential.Exp) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#985-987) is never used and should be removed
Exponential.mul_(uint256,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1001-1003) is never used and should be removed
Exponential.mul_(uint256,uint256,string) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#1005-1012) is never used and should be removed
Exponential.safe224(uint256,string) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#932-935) is never used and should be removed
Exponential.safe32(uint256,string) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#937-940) is never used and should be removed
Exponential.subExp(Exponential.Exp,Exponential.Exp) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#757-761) is never used and should be removed
Exponential.sub_(Exponential.Double,Exponential.Double) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#964-966) is never used and should be removed
Exponential.sub_(Exponential.Exp,Exponential.Exp) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#960-962) is never used and should be removed
Exponential.sub_(uint256,uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#968-970) is never used and should be removed
Exponential.sub_(uint256,uint256,string) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#972-975) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code[0m
[92m
Constant ComptrollerInterface.isComptroller (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#5) is not in UPPER_CASE_WITH_UNDERSCORES
Constant InterestRateModel.isInterestRateModel (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#88) is not in UPPER_CASE_WITH_UNDERSCORES
Variable CTokenStorage._notEntered (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#116) is not in mixedCase
Constant CTokenStorage.borrowRateMaxMantissa (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#137) is not in UPPER_CASE_WITH_UNDERSCORES
Constant CTokenStorage.reserveFactorMaxMantissa (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#142) is not in UPPER_CASE_WITH_UNDERSCORES
Function CTokenInterface._setPendingAdmin(address) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#341) is not in mixedCase
Function CTokenInterface._acceptAdmin() (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#342) is not in mixedCase
Function CTokenInterface._setComptroller(ComptrollerInterface) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#343) is not in mixedCase
Function CTokenInterface._setReserveFactor(uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#344) is not in mixedCase
Function CTokenInterface._reduceReserves(uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#345) is not in mixedCase
Function CTokenInterface._setInterestRateModel(InterestRateModel) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#346) is not in mixedCase
Constant CTokenInterface.isCToken (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#229) is not in UPPER_CASE_WITH_UNDERSCORES
Function CErc20Interface._addReserves(uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#371) is not in mixedCase
Function CDelegatorInterface._setImplementation(address,bool,bytes) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#393) is not in mixedCase
Function CDelegateInterface._becomeImplementation(bytes) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#402) is not in mixedCase
Function CDelegateInterface._resignImplementation() (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#407) is not in mixedCase
Constant Exponential.expScale (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#713) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Exponential.doubleScale (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#714) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Exponential.halfExpScale (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#715) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Exponential.mantissaOne (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#716) is not in UPPER_CASE_WITH_UNDERSCORES
Function CToken._setPendingAdmin(address) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2279-2295) is not in mixedCase
Function CToken._acceptAdmin() (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2302-2322) is not in mixedCase
Function CToken._setComptroller(ComptrollerInterface) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2329-2346) is not in mixedCase
Function CToken._setReserveFactor(uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2353-2361) is not in mixedCase
Function CToken._reduceReserves(uint256) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2460-2468) is not in mixedCase
Function CToken._setInterestRateModel(InterestRateModel) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2525-2533) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
[92m
Variable CToken.liquidateBorrowFresh(address,address,uint256,CTokenInterface).seizeTokens (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2173) is too similar to CToken.seizeInternal(address,address,address,uint256).seizerToken (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2222)
Variable CToken.seize(address,address,uint256).seizeTokens (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2208) is too similar to CToken.seizeInternal(address,address,address,uint256).seizerToken (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2222)
Variable CTokenInterface.seize(address,address,uint256).seizeTokens (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#336) is too similar to CToken.seizeInternal(address,address,address,uint256).seizerToken (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2222)
Variable CToken.seizeInternal(address,address,address,uint256).seizeTokens (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2222) is too similar to CToken.seizeInternal(address,address,address,uint256).seizerToken (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2222)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-are-too-similar[0m
[92m
CDelegationStorage.implementation (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#378) should be constant
CErc20Storage.underlying (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#353) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
[92m
_setInterestRateModel(InterestRateModel) should be declared external:
	- CToken._setInterestRateModel(InterestRateModel) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#2525-2533)
	- CTokenInterface._setInterestRateModel(InterestRateModel) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#346)
_setImplementation(address,bool,bytes) should be declared external:
	- CDelegatorInterface._setImplementation(address,bool,bytes) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#393)
_becomeImplementation(bytes) should be declared external:
	- CDelegateInterface._becomeImplementation(bytes) (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#402)
_resignImplementation() should be declared external:
	- CDelegateInterface._resignImplementation() (../../sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol#407)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
/sb/0xd06527d5e56a3495252a528c4987003b712860ee.sol analyzed (17 contracts with 78 detectors), 133 result(s) found
