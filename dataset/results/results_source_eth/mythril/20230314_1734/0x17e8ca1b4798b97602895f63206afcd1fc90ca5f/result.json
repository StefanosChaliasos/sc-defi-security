{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "address": 351,
            "contract": "Storage",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f": {
                            "balance": "0x0",
                            "code": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80630f532d18146100515780631413dc7d1461006f57806399eb59b91461008d578063dc9031c4146100bd575b600080fd5b6100596100ed565b60405161006691906101ff565b60405180910390f35b610077610114565b60405161008491906101ff565b60405180910390f35b6100a760048036038101906100a2919061019e565b61013b565b6040516100b491906101ff565b60405180910390f35b6100d760048036038101906100d291906101c7565b610153565b6040516100e491906101ff565b60405180910390f35b7fb2f2618cecbbb6e7468cc0f2aa43858ad8d153e0280b22285e28e853bb9d453a60001b81565b7ff9543f11459ccccd21306c8881aaab675ff49d988c1162fd1dd9bbcdbe4446be60001b81565b60016020528060005260406000206000915090505481565b6000818154811061016057fe5b906000526020600020016000915090505481565b6000813590506101838161022e565b92915050565b60008135905061019881610245565b92915050565b6000602082840312156101b057600080fd5b60006101be84828501610174565b91505092915050565b6000602082840312156101d957600080fd5b60006101e784828501610189565b91505092915050565b6101f98161021a565b82525050565b600060208201905061021460008301846101f0565b92915050565b6000819050919050565b6000819050919050565b6102378161021a565b811461024257600080fd5b50565b61024e81610224565b811461025957600080fd5b5056fea2646970667358221220a0050d2c0f81b2c5a4efa1df0ebade1d59e3a021d47136bec46db9b4fd0f3b1e64736f6c634300060c0033",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x200000000",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "",
                        "input": "0x608060405234801561001057600080fd5b50610292806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630f532d18146100515780631413dc7d1461006f57806399eb59b91461008d578063dc9031c4146100bd575b600080fd5b6100596100ed565b60405161006691906101ff565b60405180910390f35b610077610114565b60405161008491906101ff565b60405180910390f35b6100a760048036038101906100a2919061019e565b61013b565b6040516100b491906101ff565b60405180910390f35b6100d760048036038101906100d291906101c7565b610153565b6040516100e491906101ff565b60405180910390f35b7fb2f2618cecbbb6e7468cc0f2aa43858ad8d153e0280b22285e28e853bb9d453a60001b81565b7ff9543f11459ccccd21306c8881aaab675ff49d988c1162fd1dd9bbcdbe4446be60001b81565b60016020528060005260406000206000915090505481565b6000818154811061016057fe5b906000526020600020016000915090505481565b6000813590506101838161022e565b92915050565b60008135905061019881610245565b92915050565b6000602082840312156101b057600080fd5b60006101be84828501610174565b91505092915050565b6000602082840312156101d957600080fd5b60006101e784828501610189565b91505092915050565b6101f98161021a565b82525050565b600060208201905061021460008301846101f0565b92915050565b6000819050919050565b6000819050919050565b6102378161021a565b811461024257600080fd5b50565b61024e81610224565b811461025957600080fd5b5056fea2646970667358221220a0050d2c0f81b2c5a4efa1df0ebade1d59e3a021d47136bec46db9b4fd0f3b1e64736f6c634300060c0033",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x0"
                    },
                    {
                        "address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f",
                        "calldata": "0xdc9031c40000000000000000000000000000000000000000000000000000000000000000",
                        "input": "0xdc9031c40000000000000000000000000000000000000000000000000000000000000000",
                        "name": "stack(uint256)",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x0"
                    }
                ]
            },
            "filename": "../retrospective-sc-analysis/data/sources/eth/sol/0x17e8ca1b4798b97602895f63206afcd1fc90ca5f.sol",
            "function": "stack(uint256)",
            "line": 180,
            "message": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).\nClassification: SWC-110",
            "name": "Exception State (SWC 110)",
            "severity": "Medium"
        }
    ],
    "infos": [],
    "parser": {
        "id": "mythril-0.23.15",
        "mode": "solidity",
        "version": "2023/01/20"
    }
}
